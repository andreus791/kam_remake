const
  DEBUG_MODE = False;
  DEPOSITS_TIME = 600;
  AUTOFEED_TIME = 8000;
  GIFT_TIME = 9000;
  TARGETS_TIME = 6000;
  AMBIENT_TIME = 250;

var
  Ware, Count: array[0..3] of Integer;
  AttackTargetY: array[4..10] of Integer;
  I, K: Integer;
  Wolves: array of Integer;
  SoundAllowed: array[0..3] of Boolean;


procedure FindWolves;
var
  aX, aY, W: Integer;
begin
  for aX := 1 to States.MapWidth - 1 do
    for aY := 1 to States.MapHeight - 1 do
    begin
      W := States.UnitAt(aX, aY);
      if W > 0 then
        if States.UnitType(W) = 30 then
        begin
          SetLength(Wolves, Length(Wolves) + 1);
          if Length(Wolves) > 0 then
            Wolves[Length(Wolves) - 1] := W;
        end;
    end;
end;


{$COMMAND sound: TurnSoundOnOff}


procedure TurnSoundOnOff(P, Value: Integer);
var
  aValue: Integer;
begin
  if not Utils.InRangeI(P, 0, 3) then
    Exit;
  aValue := Utils.EnsureRangeI(Value, 0, 1);
  SoundAllowed[P] := Boolean(aValue);
end;


procedure SetWareDistribution;
begin
  for I := 4 to 11 do
  begin
    Actions.PlayerWareDistribution(I, 6, 2, 5);
    Actions.PlayerWareDistribution(I, 6, 10, 5);
    Actions.PlayerWareDistribution(I, 5, 1, 5);
    Actions.PlayerWareDistribution(I, 5, 15, 5);
    Actions.PlayerWareDistribution(I, 5, 2, 5);
    Actions.PlayerWareDistribution(I, 5, 10, 5);
    Actions.PlayerWareDistribution(I, 2, 20, 5);
    Actions.PlayerWareDistribution(I, 2, 19, 5);
    Actions.PlayerWareDistribution(I, 9, 22, 5);
    Actions.PlayerWareDistribution(I, 9, 16, 5);
    Actions.PlayerWareDistribution(I, 9, 12, 5);
  end;
end;


procedure BlockWares;
var
  H: array of Integer;
begin
  for I := 4 to 10 do
  begin
    H := States.PlayerGetAllHouses(I);

    for K := Low(H) to High(H) do
      if States.HouseType(H[K]) = 11 then
      begin
        Actions.HouseWareBlock(H[K], 0, True);
        Actions.HouseWareBlock(H[K], 1, True);
        Actions.HouseWareBlock(H[K], 2, True);
        Actions.HouseWareBlock(H[K], 3, True);
        Actions.HouseWareBlock(H[K], 4, True);
        Actions.HouseWareBlock(H[K], 5, True);
        Actions.HouseWareBlock(H[K], 6, True);
        Actions.HouseWareBlock(H[K], 9, True);
        Actions.HouseWareBlock(H[K], 11, True);
        Actions.HouseWareBlock(H[K], 14, True);
        Actions.HouseWareBlock(H[K], 15, True);
      end;
  end;
end;


function GroupsFormation(P, GT: Integer): Integer;
var
  aCount, aColumns: Integer;
begin
  States.AIGroupsFormationGet(P, GT, aCount, aColumns);
  Result := aCount;
end;


function DefenceSquadsCount(P, aGT: Integer): Integer;
var
  I, aX, aY: Integer;
  GT, DT: Byte; 
  R: Word;
begin
  if States.StatAIDefencePositionsCount(P) > 0 then
    for I := 0 to States.StatAIDefencePositionsCount(P) - 1 do
    begin
      States.AIDefencePositionGet(P, I, aX, aY, GT, R, DT);
      if (DT = 0)
      and (GT = aGT) then
        Result := Result + 1;
    end;
end;


function SoldiersForDefence(P: Integer): Integer;
var
  I: Integer;
begin
  Result := 0;
  for I := 0 to 3 do
    Result := Result + DefenceSquadsCount(P, I) * GroupsFormation(P, I);
end;


function AttackAmount(P: Integer): Integer;
begin
  case P of
    4..10: Result := 50
    else   Result := 0;
  end;
end;


function SoldiersToEquip(P: Integer): Integer;
begin
  Result := SoldiersForDefence(P) + AttackAmount(P) - States.StatArmyCount(P) - States.StatUnitTypeCount(P, 13) + States.StatHouseTypeCount(P, 17) + 7;
end;


function FirstAttackTimer(P: Integer): Integer;
begin
  case States.MissionDifficulty of
    mdEasy1:
      case P of
        4:  Result := 45000;
        5:  Result := 48000;
        6:  Result := 63000;
        7:  Result := 66000;
        8:  Result := 42000;
        9:  Result := 69000;
        10: Result := 72000;
      end;

    mdNormal:
      case P of
        4:  Result := 39000;
        5:  Result := 43000;
        6:  Result := 59000;
        7:  Result := 62000;
        8:  Result := 36000;
        9:  Result := 66000;
        10: Result := 68000;
      end;

    mdHard1:
      case P of
        4:  Result := 40000;
        5:  Result := 45000;
        6:  Result := 54000;
        7:  Result := 57000;
        8:  Result := 36000;
        9:  Result := 60000;
        10: Result := 63000;
      end;
  end;
end;


function AttackFrequency(P: Integer): Integer;
begin
  Result := AttackAmount(P) * States.AIEquipRate(P, 1);
end;


function AttackTime(P, ID: Integer): Integer;
begin
  Result := FirstAttackTimer(P) + AttackFrequency(P) * (ID - 1);
end;


procedure UpdateAIEquipRates;
var
  Pos: TKMPoint;
begin
  case States.MissionDifficulty of

    mdEasy1: begin
               Actions.AIEquipRate(4, 0, 255);
               Actions.AIEquipRate(4, 1, 255);
               Actions.AIEquipRate(5, 0, 255);
               Actions.AIEquipRate(5, 1, 255);
               Actions.AIEquipRate(6, 0, 255);
               Actions.AIEquipRate(6, 1, 255);
               Actions.AIEquipRate(7, 0, 255);
               Actions.AIEquipRate(7, 1, 255);
               Actions.AIEquipRate(8, 0, 220);
               Actions.AIEquipRate(8, 1, 220);
               Actions.AIEquipRate(9, 0, 320);
               Actions.AIEquipRate(9, 1, 320);
               Actions.AIEquipRate(10, 0, 320);
               Actions.AIEquipRate(10, 1, 320);
               for I := 4 to 11 do
                 Actions.AIAttackRemoveAll(I);
               Pos.X := 0;
               Pos.Y := 0;
               Actions.AIAttackAdd(8, True, 42000, 50, 0, 0, 0, 0, True, attClosestBuildingFromStartPos, Pos);
               Actions.AIAttackAdd(4, True, 45000, 50, 0, 0, 0, 0, True, attClosestBuildingFromStartPos, Pos);
               Actions.AIAttackAdd(5, True, 48000, 50, 0, 0, 0, 0, True, attClosestBuildingFromStartPos, Pos);
               Actions.AIAttackAdd(6, True, 63000, 50, 0, 0, 0, 0, True, attClosestBuildingFromStartPos, Pos);
               Actions.AIAttackAdd(7, True, 66000, 50, 0, 0, 0, 0, True, attClosestBuildingFromStartPos, Pos);
               Actions.AIAttackAdd(9, True, 69000, 50, 0, 0, 0, 0, True, attClosestBuildingFromStartPos, Pos);
               Actions.AIAttackAdd(10, True, 72000, 50, 0, 0, 0, 0, True, attClosestBuildingFromStartPos, Pos);
             end;

    mdNormal: begin
                Actions.AIEquipRate(4, 0, 175);
                Actions.AIEquipRate(4, 1, 175);
                Actions.AIEquipRate(5, 0, 175);
                Actions.AIEquipRate(5, 1, 175);
                Actions.AIEquipRate(6, 0, 175);
                Actions.AIEquipRate(6, 1, 175);
                Actions.AIEquipRate(7, 0, 175);
                Actions.AIEquipRate(7, 1, 175);
                Actions.AIEquipRate(8, 0, 175);
                Actions.AIEquipRate(8, 1, 175);
                Actions.AIEquipRate(9, 0, 225);
                Actions.AIEquipRate(9, 1, 225);
                Actions.AIEquipRate(10, 0, 225);
                Actions.AIEquipRate(10, 1, 225);
              end;

    mdHard1: begin
               Actions.AIEquipRate(4, 0, 120);
               Actions.AIEquipRate(4, 1, 120);
               Actions.AIEquipRate(5, 0, 120);
               Actions.AIEquipRate(5, 1, 120);
               Actions.AIEquipRate(6, 0, 150);
               Actions.AIEquipRate(6, 1, 150);
               Actions.AIEquipRate(7, 0, 150);
               Actions.AIEquipRate(7, 1, 150);
               Actions.AIEquipRate(8, 0, 120);
               Actions.AIEquipRate(8, 1, 120);
               Actions.AIEquipRate(9, 0, 150);
               Actions.AIEquipRate(9, 1, 150);
               Actions.AIEquipRate(10, 0, 150);
               Actions.AIEquipRate(10, 1, 150);
               for I := 4 to 11 do
                 Actions.AIAttackRemoveAll(I);
               Pos.X := 0;
               Pos.Y := 0;
               Actions.AIAttackAdd(8, True, 36000, 50, 0, 0, 0, 0, True, attClosestBuildingFromStartPos, Pos);
               Actions.AIAttackAdd(4, True, 40000, 50, 0, 0, 0, 0, True, attClosestBuildingFromStartPos, Pos);
               Actions.AIAttackAdd(5, True, 45000, 50, 0, 0, 0, 0, True, attClosestBuildingFromStartPos, Pos);
               Actions.AIAttackAdd(6, True, 54000, 50, 0, 0, 0, 0, True, attClosestBuildingFromStartPos, Pos);
               Actions.AIAttackAdd(7, True, 57000, 50, 0, 0, 0, 0, True, attClosestBuildingFromStartPos, Pos);
               Actions.AIAttackAdd(9, True, 60000, 50, 0, 0, 0, 0, True, attClosestBuildingFromStartPos, Pos);
               Actions.AIAttackAdd(10, True, 63000, 50, 0, 0, 0, 0, True, attClosestBuildingFromStartPos, Pos);
             end;
  end;

  for I := 4 to 11 do
    Actions.AIRecruitDelay(I, Utils.MaxI(FirstAttackTimer(I) - SoldiersToEquip(I) * States.AIEquipRate(I, 1), 0));

end;


procedure UpdatePlayers;
begin
  case States.MissionDifficulty of

    mdEasy1: begin
               if States.PlayerEnabled(0) then
               begin
                 Actions.GiveGroup(0, 20, 29, 221, 2, 8, 4);
                 Actions.GiveUnit(0, 0, 31, 215, 4);
                 Actions.GiveUnit(0, 9, 31, 216, 4);
                 Actions.GiveUnit(0, 0, 31, 217, 4);
               end;

               if States.PlayerEnabled(1) then
               begin
                 Actions.GiveGroup(1, 20, 36, 145, 2, 8, 4);
                 Actions.GiveUnit(1, 0, 24, 145, 4);
                 Actions.GiveUnit(1, 9, 24, 146, 4);
                 Actions.GiveUnit(1, 0, 24, 147, 4);
               end;

               if States.PlayerEnabled(2) then
               begin
                 Actions.GiveGroup(2, 16, 26, 90, 3, 8, 4);
                 Actions.GiveUnit(2, 0, 18, 82, 4);
                 Actions.GiveUnit(2, 9, 18, 83, 4);
                 Actions.GiveUnit(2, 0, 18, 84, 4);
               end;

               if States.PlayerEnabled(3) then
               begin
                 Actions.GiveGroup(3, 16, 20, 28, 4, 8, 4);
                 Actions.GiveUnit(3, 0, 19, 19, 4);
                 Actions.GiveUnit(3, 9, 19, 20, 4);
                 Actions.GiveUnit(3, 0, 19, 21, 4);
               end;

             end;

  end;
end;


procedure UpdateDeposits;
begin
  Actions.MapTilesArraySetS(['116, 139, 152, -1, -1, -1', '116, 140, 152, -1, -1, -1', '117, 7, 149, -1, -1, -1', '117, 138, 153, -1, -1, -1', '117, 139, 153, -1, -1, -1', '117, 140, 153, -1, -1, -1', '117, 141, 153, -1, -1, -1', '117, 142, 153, -1, -1, -1', '118, 5, 148, -1, -1, -1', '118, 6, 149, -1, -1, -1', '118, 7, 150, -1, -1, -1', '118, 8, 151, -1, -1, -1', '118, 138, 153, -1, -1, -1', '118, 139, 154, -1, -1, -1', '118, 140, 154, -1, -1, -1', '118, 141, 154, -1, -1, -1', '118, 142, 153, -1, -1, -1', '118, 143, 153, -1, -1, -1', '118, 144, 152, -1, -1, -1', '119, 5, 149, -1, -1, -1', '119, 6, 151, -1, -1, -1', '119, 7, 151, -1, -1, -1', '119, 8, 151, -1, -1, -1', '119, 9, 151, -1, -1, -1', '119, 15, 152, -1, -1, -1', '119, 16, 152, -1, -1, -1', '119, 17, 152, -1, -1, -1', '119, 138, 153, -1, -1, -1', '119, 139, 154, -1, -1, -1', '119, 140, 154, -1, -1, -1', '119, 141, 154, -1, -1, -1', '119, 142, 154, -1, -1, -1', '119, 143, 153, -1, -1, -1', '119, 144, 152, -1, -1, -1', '119, 145, 152, -1, -1, -1', '120, 5, 149, -1, -1, -1', '120, 6, 151, -1, -1, -1', '120, 7, 151, -1, -1, -1', '120, 8, 151, -1, -1, -1', '120, 9, 151, -1, -1, -1', '120, 14, 152, -1, -1, -1', '120, 15, 152, -1, -1, -1', '120, 16, 153, -1, -1, -1', '120, 17, 152, -1, -1, -1', '120, 138, 153, -1, -1, -1', '120, 139, 154, -1, -1, -1', '120, 140, 154, -1, -1, -1', '120, 141, 154, -1, -1, -1', '120, 142, 154, -1, -1, -1', '120, 143, 154, -1, -1, -1', '120, 144, 153, -1, -1, -1', '120, 145, 152, -1, -1, -1', '121, 4, 148, -1, -1, -1', '121, 5, 150, -1, -1, -1', '121, 6, 151, -1, -1, -1', '121, 7, 151, -1, -1, -1', '121, 8, 151, -1, -1, -1', '121, 9, 151, -1, -1, -1', '121, 10, 151, -1, -1, -1', '121, 13, 153, -1, -1, -1', '121, 14, 153, -1, -1, -1', '121, 15, 153, -1, -1, -1', '121, 16, 153, -1, -1, -1', '121, 17, 153, -1, -1, -1', '121, 18, 152, -1, -1, -1', '121, 19, 152, -1, -1, -1', '121, 138, 153, -1, -1, -1', '121, 139, 154, -1, -1, -1', '121, 140, 154, -1, -1, -1', '121, 141, 153, -1, -1, -1', '121, 142, 154, -1, -1, -1', '121, 143, 154, -1, -1, -1', '121, 144, 153, -1, -1, -1', '121, 145, 152, -1, -1, -1', '122, 3, 148, -1, -1, -1', '122, 4, 150, -1, -1, -1', '122, 5, 151, -1, -1, -1', '122, 6, 151, -1, -1, -1', '122, 7, 151, -1, -1, -1', '122, 8, 151, -1, -1, -1', '122, 9, 151, -1, -1, -1', '122, 10, 151, -1, -1, -1', '122, 13, 152, -1, -1, -1', '122, 14, 153, -1, -1, -1', '122, 15, 153, -1, -1, -1', '122, 16, 153, -1, -1, -1', '122, 17, 153, -1, -1, -1', '122, 18, 153, -1, -1, -1', '122, 19, 152, -1, -1, -1', '122, 137, 153, -1, -1, -1', '122, 138, 153, -1, -1, -1', '122, 139, 154, -1, -1, -1', '122, 140, 154, -1, -1, -1', '122, 141, 154, -1, -1, -1', '122, 142, 153, -1, -1, -1', '122, 143, 153, -1, -1, -1', '122, 144, 153, -1, -1, -1', '123, 3, 148, -1, -1, -1', '123, 4, 150, -1, -1, -1', '123, 5, 151, -1, -1, -1', '123, 6, 151, -1, -1, -1', '123, 7, 151, -1, -1, -1', '123, 8, 151, -1, -1, -1', '123, 9, 151, -1, -1, -1', '123, 10, 151, -1, -1, -1', '123, 12, 153, -1, -1, -1', '123, 13, 152, -1, -1, -1', '123, 14, 153, -1, -1, -1', '123, 15, 153, -1, -1, -1', '123, 16, 153, -1, -1, -1', '123, 17, 154, -1, -1, -1', '123, 18, 154, -1, -1, -1', '123, 19, 153, -1, -1, -1', '123, 20, 152, -1, -1, -1', '123, 116, 149, -1, -1, -1', '123, 117, 150, -1, -1, -1', '123, 137, 153, -1, -1, -1', '123, 138, 155, -1, -1, -1', '123, 139, 154, -1, -1, -1', '123, 140, 153, -1, -1, -1', '123, 141, 154, -1, -1, -1', '123, 142, 153, -1, -1, -1', '123, 143, 153, -1, -1, -1', '124, 4, 149, -1, -1, -1', '124, 5, 151, -1, -1, -1', '124, 6, 151, -1, -1, -1', '124, 7, 151, -1, -1, -1', '124, 8, 151, -1, -1, -1', '124, 12, 152, -1, -1, -1', '124, 13, 153, -1, -1, -1', '124, 14, 153, -1, -1, -1', '124, 15, 153, -1, -1, -1', '124, 16, 154, -1, -1, -1', '124, 17, 155, -1, -1, -1', '124, 18, 154, -1, -1, -1', '124, 19, 153, -1, -1, -1', '124, 20, 152, -1, -1, -1', '124, 115, 150, -1, -1, -1', '124, 116, 150, -1, -1, -1', '124, 117, 150, -1, -1, -1', '124, 137, 153, -1, -1, -1', '124, 138, 154, -1, -1, -1', '124, 139, 154, -1, -1, -1', '124, 140, 154, -1, -1, -1', '124, 141, 153, -1, -1, -1', '124, 142, 153, -1, -1, -1', '125, 4, 148, -1, -1, -1', '125, 5, 150, -1, -1, -1', '125, 6, 151, -1, -1, -1', '125, 7, 151, -1, -1, -1', '125, 8, 151, -1, -1, -1', '125, 11, 152, -1, -1, -1', '125, 12, 152, -1, -1, -1', '125, 13, 153, -1, -1, -1', '125, 14, 153, -1, -1, -1', '125, 15, 153, -1, -1, -1', '125, 16, 154, -1, -1, -1', '125, 17, 154, -1, -1, -1', '125, 18, 154, -1, -1, -1', '125, 19, 153, -1, -1, -1', '125, 20, 153, -1, -1, -1', '125, 21, 152, -1, -1, -1', '125, 113, 151, -1, -1, -1', '125, 114, 150, -1, -1, -1', '125, 115, 151, -1, -1, -1', '125, 116, 151, -1, -1, -1', '125, 117, 148, -1, -1, -1', '125, 133, 147, -1, -1, -1', '125, 137, 153, -1, -1, -1', '125, 138, 153, -1, -1, -1', '125, 139, 154, -1, -1, -1', '125, 140, 153, -1, -1, -1', '125, 141, 153, -1, -1, -1', '126, 5, 149, -1, -1, -1', '126, 6, 151, -1, -1, -1', '126, 7, 151, -1, -1, -1', '126, 8, 151, -1, -1, -1', '126, 11, 152, -1, -1, -1', '126, 12, 153, -1, -1, -1', '126, 13, 153, -1, -1, -1', '126, 14, 155, -1, -1, -1', '126, 15, 154, -1, -1, -1', '126, 16, 154, -1, -1, -1', '126, 17, 155, -1, -1, -1', '126, 18, 154, -1, -1, -1', '126, 19, 154, -1, -1, -1', '126, 20, 153, -1, -1, -1', '126, 21, 152, -1, -1, -1', '126, 114, 151, -1, -1, -1', '126, 115, 149, -1, -1, -1', '126, 116, 151, -1, -1, -1', '126, 117, 148, -1, -1, -1', '126, 132, 147, -1, -1, -1', '126, 133, 147, -1, -1, -1', '126, 137, 152, -1, -1, -1', '126, 138, 153, -1, -1, -1', '126, 139, 153, -1, -1, -1', '126, 140, 153, -1, -1, -1', '127, 3, 148, -1, -1, -1', '127, 4, 149, -1, -1, -1', '127, 5, 150, -1, -1, -1', '127, 6, 151, -1, -1, -1', '127, 7, 151, -1, -1, -1', '127, 8, 151, -1, -1, -1', '127, 10, 152, -1, -1, -1', '127, 11, 152, -1, -1, -1', '127, 12, 153, -1, -1, -1', '127, 13, 153, -1, -1, -1', '127, 14, 154, -1, -1, -1', '127, 15, 154, -1, -1, -1', '127, 16, 155, -1, -1, -1', '127, 17, 155, -1, -1, -1', '127, 18, 155, -1, -1, -1', '127, 19, 154, -1, -1, -1', '127, 20, 153, -1, -1, -1', '127, 21, 152, -1, -1, -1', '127, 115, 150, -1, -1, -1', '127, 116, 149, -1, -1, -1', '127, 117, 151, -1, -1, -1', '127, 130, 145, -1, -1, -1', '127, 131, 146, -1, -1, -1', '127, 132, 146, -1, -1, -1', '127, 137, 152, -1, -1, -1', '127, 138, 152, -1, -1, -1', '127, 139, 152, -1, -1, -1', '128, 3, 149, -1, -1, -1', '128, 4, 151, -1, -1, -1', '128, 5, 151, -1, -1, -1', '128, 6, 151, -1, -1, -1', '128, 10, 152, -1, -1, -1', '128, 11, 152, -1, -1, -1', '128, 12, 153, -1, -1, -1', '128, 13, 154, -1, -1, -1', '128, 14, 154, -1, -1, -1', '128, 15, 155, -1, -1, -1', '128, 16, 155, -1, -1, -1', '128, 17, 155, -1, -1, -1', '128, 18, 155, -1, -1, -1', '128, 19, 154, -1, -1, -1', '128, 20, 153, -1, -1, -1', '128, 21, 152, -1, -1, -1', '128, 130, 146, -1, -1, -1', '128, 131, 146, -1, -1, -1', '128, 132, 147, -1, -1, -1', '128, 138, 152, -1, -1, -1', '128, 139, 152, -1, -1, -1', '129, 3, 149, -1, -1, -1', '129, 4, 151, -1, -1, -1', '129, 5, 151, -1, -1, -1', '129, 9, 152, -1, -1, -1', '129, 10, 152, -1, -1, -1', '129, 11, 153, -1, -1, -1', '129, 12, 154, -1, -1, -1', '129, 13, 154, -1, -1, -1', '129, 14, 155, -1, -1, -1', '129, 15, 155, -1, -1, -1', '129, 16, 155, -1, -1, -1', '129, 17, 155, -1, -1, -1', '129, 18, 155, -1, -1, -1', '129, 19, 154, -1, -1, -1', '129, 20, 153, -1, -1, -1', '129, 21, 152, -1, -1, -1', '129, 130, 147, -1, -1, -1', '130, 2, 148, -1, -1, -1', '130, 3, 150, -1, -1, -1', '130, 4, 151, -1, -1, -1', '130, 8, 152, -1, -1, -1', '130, 9, 152, -1, -1, -1', '130, 10, 153, -1, -1, -1', '130, 11, 154, -1, -1, -1', '130, 12, 154, -1, -1, -1', '130, 13, 154, -1, -1, -1', '130, 14, 155, -1, -1, -1', '130, 15, 155, -1, -1, -1', '130, 16, 155, -1, -1, -1', '130, 17, 155, -1, -1, -1', '130, 18, 155, -1, -1, -1', '130, 19, 154, -1, -1, -1', '130, 20, 153, -1, -1, -1', '130, 21, 152, -1, -1, -1', '131, 2, 149, -1, -1, -1', '131, 3, 151, -1, -1, -1', '131, 4, 151, -1, -1, -1', '131, 7, 152, -1, -1, -1', '131, 8, 152, -1, -1, -1', '131, 9, 153, -1, -1, -1', '131, 10, 154, -1, -1, -1', '131, 11, 154, -1, -1, -1', '131, 12, 155, -1, -1, -1', '131, 13, 155, -1, -1, -1', '131, 14, 155, -1, -1, -1', '131, 15, 155, -1, -1, -1', '131, 16, 155, -1, -1, -1', '131, 17, 155, -1, -1, -1', '131, 18, 155, -1, -1, -1', '131, 19, 154, -1, -1, -1', '131, 20, 153, -1, -1, -1', '131, 21, 152, -1, -1, -1', '131, 22, 152, -1, -1, -1', '132, 2, 149, -1, -1, -1', '132, 3, 151, -1, -1, -1', '132, 4, 151, -1, -1, -1', '132, 7, 152, -1, -1, -1', '132, 8, 153, -1, -1, -1', '132, 9, 153, -1, -1, -1', '132, 10, 154, -1, -1, -1', '132, 11, 155, -1, -1, -1', '132, 12, 155, -1, -1, -1', '132, 13, 155, -1, -1, -1', '132, 14, 155, -1, -1, -1', '132, 15, 155, -1, -1, -1', '132, 16, 155, -1, -1, -1', '132, 17, 155, -1, -1, -1', '132, 18, 155, -1, -1, -1', '132, 19, 154, -1, -1, -1', '132, 20, 153, -1, -1, -1', '132, 21, 153, -1, -1, -1', '132, 22, 153, -1, -1, -1', '133, 2, 148, -1, -1, -1', '133, 3, 150, -1, -1, -1', '133, 4, 151, -1, -1, -1', '133, 7, 152, -1, -1, -1', '133, 8, 153, -1, -1, -1', '133, 9, 154, -1, -1, -1', '133, 10, 154, -1, -1, -1', '133, 11, 155, -1, -1, -1', '133, 12, 155, -1, -1, -1', '133, 13, 155, -1, -1, -1', '133, 14, 155, -1, -1, -1', '133, 15, 155, -1, -1, -1', '133, 16, 155, -1, -1, -1', '133, 17, 155, -1, -1, -1', '133, 18, 154, -1, -1, -1', '133, 19, 154, -1, -1, -1', '133, 20, 153, -1, -1, -1', '133, 21, 153, -1, -1, -1', '133, 22, 152, -1, -1, -1', '134, 3, 149, -1, -1, -1', '134, 4, 151, -1, -1, -1', '134, 8, 153, -1, -1, -1', '134, 9, 154, -1, -1, -1', '134, 10, 154, -1, -1, -1', '134, 11, 155, -1, -1, -1', '134, 12, 155, -1, -1, -1', '134, 13, 155, -1, -1, -1', '134, 14, 155, -1, -1, -1', '134, 15, 155, -1, -1, -1', '134, 16, 155, -1, -1, -1', '134, 17, 154, -1, -1, -1', '134, 18, 154, -1, -1, -1', '134, 19, 154, -1, -1, -1', '134, 20, 153, -1, -1, -1', '134, 21, 153, -1, -1, -1', '134, 22, 152, -1, -1, -1', '135, 3, 149, -1, -1, -1', '135, 4, 151, -1, -1, -1', '135, 5, 151, -1, -1, -1', '135, 8, 152, -1, -1, -1', '135, 9, 153, -1, -1, -1', '135, 10, 154, -1, -1, -1', '135, 11, 155, -1, -1, -1', '135, 12, 155, -1, -1, -1', '135, 13, 155, -1, -1, -1', '135, 14, 155, -1, -1, -1', '135, 15, 155, -1, -1, -1', '135, 16, 155, -1, -1, -1', '135, 17, 154, -1, -1, -1', '135, 18, 154, -1, -1, -1', '135, 19, 154, -1, -1, -1', '135, 20, 153, -1, -1, -1', '135, 21, 153, -1, -1, -1', '135, 22, 152, -1, -1, -1', '136, 3, 148, -1, -1, -1', '136, 4, 150, -1, -1, -1', '136, 5, 151, -1, -1, -1', '136, 6, 151, -1, -1, -1', '136, 9, 153, -1, -1, -1', '136, 10, 153, -1, -1, -1', '136, 11, 154, -1, -1, -1', '136, 12, 154, -1, -1, -1', '136, 13, 155, -1, -1, -1', '136, 14, 155, -1, -1, -1', '136, 15, 155, -1, -1, -1', '136, 16, 155, -1, -1, -1', '136, 17, 154, -1, -1, -1', '136, 18, 155, -1, -1, -1', '136, 19, 154, -1, -1, -1', '136, 20, 153, -1, -1, -1', '136, 21, 152, -1, -1, -1', '136, 22, 152, -1, -1, -1', '137, 4, 148, -1, -1, -1', '137, 5, 150, -1, -1, -1', '137, 6, 151, -1, -1, -1', '137, 7, 151, -1, -1, -1', '137, 9, 152, -1, -1, -1', '137, 10, 153, -1, -1, -1', '137, 11, 153, -1, -1, -1', '137, 12, 154, -1, -1, -1', '137, 13, 154, -1, -1, -1', '137, 14, 155, -1, -1, -1', '137, 15, 155, -1, -1, -1', '137, 16, 155, -1, -1, -1', '137, 17, 154, -1, -1, -1', '137, 18, 154, -1, -1, -1', '137, 19, 154, -1, -1, -1', '137, 20, 153, -1, -1, -1', '137, 21, 152, -1, -1, -1', '138, 5, 149, -1, -1, -1', '138, 6, 151, -1, -1, -1', '138, 7, 151, -1, -1, -1', '138, 10, 152, -1, -1, -1', '138, 11, 153, -1, -1, -1', '138, 12, 155, -1, -1, -1', '138, 13, 154, -1, -1, -1', '138, 14, 155, -1, -1, -1', '138, 15, 155, -1, -1, -1', '138, 16, 155, -1, -1, -1', '138, 17, 155, -1, -1, -1', '138, 18, 154, -1, -1, -1', '138, 19, 154, -1, -1, -1', '138, 20, 153, -1, -1, -1', '138, 21, 152, -1, -1, -1', '139, 5, 149, -1, -1, -1', '139, 6, 151, -1, -1, -1', '139, 7, 151, -1, -1, -1', '139, 11, 153, -1, -1, -1', '139, 12, 153, -1, -1, -1', '139, 13, 154, -1, -1, -1', '139, 14, 155, -1, -1, -1', '139, 15, 155, -1, -1, -1', '139, 16, 155, -1, -1, -1', '139, 17, 155, -1, -1, -1', '139, 18, 154, -1, -1, -1', '139, 19, 154, -1, -1, -1', '139, 20, 153, -1, -1, -1', '139, 21, 152, -1, -1, -1', '140, 5, 149, -1, -1, -1', '140, 6, 151, -1, -1, -1', '140, 7, 151, -1, -1, -1', '140, 8, 151, -1, -1, -1', '140, 12, 153, -1, -1, -1', '140, 13, 153, -1, -1, -1', '140, 14, 154, -1, -1, -1', '140, 15, 155, -1, -1, -1', '140, 16, 155, -1, -1, -1', '140, 17, 155, -1, -1, -1', '140, 18, 154, -1, -1, -1', '140, 19, 154, -1, -1, -1', '140, 20, 153, -1, -1, -1', '140, 21, 152, -1, -1, -1', '141, 4, 148, -1, -1, -1', '141, 5, 150, -1, -1, -1', '141, 6, 151, -1, -1, -1', '141, 7, 151, -1, -1, -1', '141, 8, 151, -1, -1, -1', '141, 12, 152, -1, -1, -1', '141, 13, 153, -1, -1, -1', '141, 14, 154, -1, -1, -1', '141, 15, 154, -1, -1, -1', '141, 16, 155, -1, -1, -1', '141, 17, 155, -1, -1, -1', '141, 18, 155, -1, -1, -1', '141, 19, 154, -1, -1, -1', '141, 20, 153, -1, -1, -1', '141, 21, 153, -1, -1, -1', '142, 4, 149, -1, -1, -1', '142, 5, 151, -1, -1, -1', '142, 6, 151, -1, -1, -1', '142, 7, 151, -1, -1, -1', '142, 8, 151, -1, -1, -1', '142, 9, 151, -1, -1, -1', '142, 10, 151, -1, -1, -1', '142, 12, 152, -1, -1, -1', '142, 13, 153, -1, -1, -1', '142, 14, 153, -1, -1, -1', '142, 15, 154, -1, -1, -1', '142, 16, 154, -1, -1, -1', '142, 17, 155, -1, -1, -1', '142, 18, 155, -1, -1, -1', '142, 19, 154, -1, -1, -1', '142, 20, 154, -1, -1, -1', '142, 21, 153, -1, -1, -1', '143, 4, 149, -1, -1, -1', '143, 5, 151, -1, -1, -1', '143, 6, 151, -1, -1, -1', '143, 7, 151, -1, -1, -1', '143, 8, 151, -1, -1, -1', '143, 9, 151, -1, -1, -1', '143, 10, 151, -1, -1, -1', '143, 14, 153, -1, -1, -1', '143, 15, 155, -1, -1, -1', '143, 16, 154, -1, -1, -1', '143, 17, 155, -1, -1, -1', '143, 18, 155, -1, -1, -1', '143, 19, 155, -1, -1, -1', '143, 20, 154, -1, -1, -1', '143, 21, 153, -1, -1, -1', '144, 4, 149, -1, -1, -1', '144, 5, 151, -1, -1, -1', '144, 6, 151, -1, -1, -1', '144, 7, 151, -1, -1, -1', '144, 8, 151, -1, -1, -1', '144, 9, 151, -1, -1, -1', '144, 10, 151, -1, -1, -1', '144, 11, 151, -1, -1, -1', '144, 14, 153, -1, -1, -1', '144, 15, 153, -1, -1, -1', '144, 16, 154, -1, -1, -1', '144, 17, 155, -1, -1, -1', '144, 18, 155, -1, -1, -1', '144, 19, 154, -1, -1, -1', '144, 20, 154, -1, -1, -1', '144, 21, 153, -1, -1, -1', '145, 4, 149, -1, -1, -1', '145, 5, 151, -1, -1, -1', '145, 6, 151, -1, -1, -1', '145, 7, 151, -1, -1, -1', '145, 8, 151, -1, -1, -1', '145, 9, 151, -1, -1, -1', '145, 10, 151, -1, -1, -1', '145, 11, 151, -1, -1, -1', '145, 14, 152, -1, -1, -1', '145, 15, 153, -1, -1, -1', '145, 16, 154, -1, -1, -1', '145, 17, 155, -1, -1, -1', '145, 18, 155, -1, -1, -1', '145, 19, 154, -1, -1, -1', '145, 20, 153, -1, -1, -1', '145, 21, 153, -1, -1, -1', '146, 4, 148, -1, -1, -1', '146, 5, 150, -1, -1, -1', '146, 6, 151, -1, -1, -1', '146, 7, 151, -1, -1, -1', '146, 8, 151, -1, -1, -1', '146, 9, 151, -1, -1, -1', '146, 10, 151, -1, -1, -1', '146, 11, 151, -1, -1, -1', '146, 14, 152, -1, -1, -1', '146, 15, 153, -1, -1, -1', '146, 16, 154, -1, -1, -1', '146, 17, 155, -1, -1, -1', '146, 18, 154, -1, -1, -1', '146, 19, 155, -1, -1, -1', '146, 20, 153, -1, -1, -1', '146, 21, 152, -1, -1, -1', '147, 5, 149, -1, -1, -1', '147, 6, 151, -1, -1, -1', '147, 7, 151, -1, -1, -1', '147, 8, 151, -1, -1, -1', '147, 9, 150, -1, -1, -1', '147, 10, 151, -1, -1, -1', '147, 14, 153, -1, -1, -1', '147, 15, 153, -1, -1, -1', '147, 16, 154, -1, -1, -1', '147, 17, 155, -1, -1, -1', '147, 18, 154, -1, -1, -1', '147, 19, 153, -1, -1, -1', '147, 20, 153, -1, -1, -1', '147, 21, 152, -1, -1, -1', '148, 4, 148, -1, -1, -1', '148, 5, 150, -1, -1, -1', '148, 6, 151, -1, -1, -1', '148, 7, 151, -1, -1, -1', '148, 13, 152, -1, -1, -1', '148, 14, 153, -1, -1, -1', '148, 15, 154, -1, -1, -1', '148, 16, 155, -1, -1, -1', '148, 17, 155, -1, -1, -1', '148, 18, 154, -1, -1, -1', '148, 19, 153, -1, -1, -1', '148, 20, 152, -1, -1, -1', '148, 197, 147, -1, -1, -1', '149, 4, 149, -1, -1, -1', '149, 5, 151, -1, -1, -1', '149, 6, 151, -1, -1, -1', '149, 7, 151, -1, -1, -1', '149, 11, 152, -1, -1, -1', '149, 12, 152, -1, -1, -1', '149, 13, 153, -1, -1, -1', '149, 14, 153, -1, -1, -1', '149, 15, 154, -1, -1, -1', '149, 16, 155, -1, -1, -1', '149, 17, 155, -1, -1, -1', '149, 18, 154, -1, -1, -1', '149, 19, 153, -1, -1, -1', '149, 20, 152, -1, -1, -1', '149, 197, 147, -1, -1, -1', '149, 198, 147, -1, -1, -1', '149, 199, 147, -1, -1, -1', '150, 4, 148, -1, -1, -1', '150, 5, 150, -1, -1, -1', '150, 6, 151, -1, -1, -1', '150, 7, 151, -1, -1, -1', '150, 11, 152, -1, -1, -1', '150, 12, 152, -1, -1, -1', '150, 13, 153, -1, -1, -1', '150, 14, 154, -1, -1, -1', '150, 15, 154, -1, -1, -1', '150, 16, 155, -1, -1, -1', '150, 17, 155, -1, -1, -1', '150, 18, 154, -1, -1, -1', '150, 19, 153, -1, -1, -1', '150, 20, 152, -1, -1, -1', '150, 197, 147, -1, -1, -1', '150, 198, 147, -1, -1, -1', '150, 199, 147, -1, -1, -1', '150, 200, 147, -1, -1, -1', '151, 5, 148, -1, -1, -1', '151, 6, 150, -1, -1, -1', '151, 7, 151, -1, -1, -1', '151, 11, 152, -1, -1, -1', '151, 12, 153, -1, -1, -1', '151, 13, 153, -1, -1, -1', '151, 14, 154, -1, -1, -1', '151, 15, 154, -1, -1, -1', '151, 16, 155, -1, -1, -1', '151, 17, 155, -1, -1, -1', '151, 18, 154, -1, -1, -1', '151, 19, 153, -1, -1, -1', '151, 20, 152, -1, -1, -1', '151, 196, 147, -1, -1, -1', '151, 197, 147, -1, -1, -1', '151, 198, 147, -1, -1, -1', '151, 199, 147, -1, -1, -1', '151, 200, 147, -1, -1, -1', '151, 201, 147, -1, -1, -1', '151, 202, 147, -1, -1, -1', '152, 6, 149, -1, -1, -1', '152, 7, 151, -1, -1, -1', '152, 11, 152, -1, -1, -1', '152, 12, 153, -1, -1, -1', '152, 13, 153, -1, -1, -1', '152, 14, 154, -1, -1, -1', '152, 15, 154, -1, -1, -1', '152, 16, 155, -1, -1, -1', '152, 17, 154, -1, -1, -1', '152, 18, 155, -1, -1, -1', '152, 19, 153, -1, -1, -1', '152, 20, 152, -1, -1, -1', '152, 196, 147, -1, -1, -1', '152, 197, 147, -1, -1, -1', '152, 198, 147, -1, -1, -1', '152, 199, 147, -1, -1, -1', '152, 200, 147, -1, -1, -1', '152, 201, 147, -1, -1, -1', '152, 202, 147, -1, -1, -1', '153, 6, 149, -1, -1, -1', '153, 7, 151, -1, -1, -1', '153, 8, 151, -1, -1, -1', '153, 12, 152, -1, -1, -1', '153, 13, 153, -1, -1, -1', '153, 14, 154, -1, -1, -1', '153, 15, 154, -1, -1, -1', '153, 16, 154, -1, -1, -1', '153, 17, 154, -1, -1, -1', '153, 18, 155, -1, -1, -1', '153, 19, 153, -1, -1, -1', '153, 20, 152, -1, -1, -1', '153, 195, 147, -1, -1, -1', '153, 196, 147, -1, -1, -1', '153, 197, 147, -1, -1, -1', '153, 198, 147, -1, -1, -1', '153, 199, 147, -1, -1, -1', '153, 200, 147, -1, -1, -1', '153, 201, 147, -1, -1, -1', '153, 202, 147, -1, -1, -1', '154, 4, 148, -1, -1, -1', '154, 5, 149, -1, -1, -1', '154, 6, 150, -1, -1, -1', '154, 7, 151, -1, -1, -1', '154, 8, 151, -1, -1, -1', '154, 9, 151, -1, -1, -1', '154, 12, 152, -1, -1, -1', '154, 13, 153, -1, -1, -1', '154, 14, 153, -1, -1, -1', '154, 15, 154, -1, -1, -1', '154, 16, 154, -1, -1, -1', '154, 17, 154, -1, -1, -1', '154, 18, 153, -1, -1, -1', '154, 19, 153, -1, -1, -1', '154, 20, 152, -1, -1, -1', '154, 195, 147, -1, -1, -1', '154, 196, 147, -1, -1, -1', '154, 197, 147, -1, -1, -1', '154, 198, 147, -1, -1, -1', '154, 199, 147, -1, -1, -1', '154, 200, 147, -1, -1, -1', '154, 201, 147, -1, -1, -1', '154, 202, 147, -1, -1, -1', '155, 4, 149, -1, -1, -1', '155, 5, 151, -1, -1, -1', '155, 6, 151, -1, -1, -1', '155, 7, 151, -1, -1, -1', '155, 8, 151, -1, -1, -1', '155, 9, 151, -1, -1, -1', '155, 13, 152, -1, -1, -1', '155, 14, 153, -1, -1, -1', '155, 15, 153, -1, -1, -1', '155, 16, 153, -1, -1, -1', '155, 17, 153, -1, -1, -1', '155, 18, 153, -1, -1, -1', '155, 19, 152, -1, -1, -1', '155, 195, 147, -1, -1, -1', '155, 196, 147, -1, -1, -1', '155, 197, 147, -1, -1, -1', '155, 198, 147, -1, -1, -1', '155, 199, 147, -1, -1, -1', '155, 200, 147, -1, -1, -1', '156, 4, 149, -1, -1, -1', '156, 5, 151, -1, -1, -1', '156, 6, 151, -1, -1, -1', '156, 7, 151, -1, -1, -1', '156, 8, 151, -1, -1, -1', '156, 9, 151, -1, -1, -1', '156, 10, 151, -1, -1, -1', '156, 13, 152, -1, -1, -1', '156, 14, 152, -1, -1, -1', '156, 15, 152, -1, -1, -1', '156, 16, 152, -1, -1, -1', '156, 17, 152, -1, -1, -1', '156, 18, 152, -1, -1, -1', '156, 19, 152, -1, -1, -1', '156, 196, 147, -1, -1, -1', '156, 197, 147, -1, -1, -1', '156, 198, 147, -1, -1, -1', '156, 199, 147, -1, -1, -1', '157, 4, 149, -1, -1, -1', '157, 5, 151, -1, -1, -1', '157, 6, 151, -1, -1, -1', '157, 7, 151, -1, -1, -1', '157, 8, 151, -1, -1, -1', '157, 9, 151, -1, -1, -1', '157, 10, 151, -1, -1, -1', '157, 196, 147, -1, -1, -1', '157, 197, 147, -1, -1, -1', '157, 198, 147, -1, -1, -1', '157, 199, 147, -1, -1, -1', '158, 4, 149, -1, -1, -1', '158, 5, 151, -1, -1, -1', '158, 6, 151, -1, -1, -1', '158, 7, 151, -1, -1, -1', '158, 8, 151, -1, -1, -1', '158, 9, 151, -1, -1, -1', '158, 10, 151, -1, -1, -1', '158, 198, 147, -1, -1, -1', '158, 199, 147, -1, -1, -1', '159, 4, 149, -1, -1, -1', '159, 5, 151, -1, -1, -1', '159, 6, 151, -1, -1, -1', '159, 7, 151, -1, -1, -1', '159, 8, 151, -1, -1, -1', '159, 199, 147, -1, -1, -1', '160, 4, 148, -1, -1, -1', '160, 5, 149, -1, -1, -1', '160, 6, 149, -1, -1, -1', '160, 7, 150, -1, -1, -1', '160, 8, 151, -1, -1, -1', '161, 7, 149, -1, -1, -1', '161, 8, 151, -1, -1, -1', '162, 6, 148, -1, -1, -1', '162, 7, 150, -1, -1, -1', '162, 8, 151, -1, -1, -1', '163, 6, 149, -1, -1, -1', '163, 7, 151, -1, -1, -1', '163, 8, 151, -1, -1, -1', '164, 6, 149, -1, -1, -1', '164, 7, 151, -1, -1, -1', '164, 8, 151, -1, -1, -1', '164, 13, 152, -1, -1, -1', '164, 14, 152, -1, -1, -1', '164, 15, 152, -1, -1, -1', '165, 5, 148, -1, -1, -1', '165, 6, 150, -1, -1, -1', '165, 7, 151, -1, -1, -1', '165, 8, 151, -1, -1, -1', '165, 9, 151, -1, -1, -1', '165, 12, 152, -1, -1, -1', '165, 13, 152, -1, -1, -1', '165, 14, 153, -1, -1, -1', '165, 15, 152, -1, -1, -1', '165, 16, 152, -1, -1, -1', '166, 5, 149, -1, -1, -1', '166, 6, 151, -1, -1, -1', '166, 7, 151, -1, -1, -1', '166, 8, 151, -1, -1, -1', '166, 9, 151, -1, -1, -1', '166, 12, 152, -1, -1, -1', '166, 13, 152, -1, -1, -1', '166, 14, 153, -1, -1, -1', '166, 15, 153, -1, -1, -1', '166, 16, 152, -1, -1, -1', '167, 5, 149, -1, -1, -1', '167, 6, 151, -1, -1, -1', '167, 7, 151, -1, -1, -1', '167, 8, 151, -1, -1, -1', '167, 9, 151, -1, -1, -1', '167, 13, 152, -1, -1, -1', '167, 14, 153, -1, -1, -1', '167, 15, 153, -1, -1, -1', '167, 16, 152, -1, -1, -1', '167, 17, 152, -1, -1, -1', '167, 18, 152, -1, -1, -1', '167, 19, 152, -1, -1, -1', '168, 4, 148, -1, -1, -1', '168, 5, 150, -1, -1, -1', '168, 6, 151, -1, -1, -1', '168, 7, 151, -1, -1, -1', '168, 8, 151, -1, -1, -1', '168, 9, 151, -1, -1, -1', '168, 13, 152, -1, -1, -1', '168, 14, 153, -1, -1, -1', '168, 15, 153, -1, -1, -1', '168, 16, 153, -1, -1, -1', '168, 17, 153, -1, -1, -1', '168, 18, 154, -1, -1, -1', '168, 19, 152, -1, -1, -1', '168, 20, 152, -1, -1, -1', '168, 21, 152, -1, -1, -1', '168, 22, 152, -1, -1, -1', '169, 4, 148, -1, -1, -1', '169, 5, 150, -1, -1, -1', '169, 6, 151, -1, -1, -1', '169, 7, 151, -1, -1, -1', '169, 8, 151, -1, -1, -1', '169, 9, 151, -1, -1, -1', '169, 10, 151, -1, -1, -1', '169, 11, 151, -1, -1, -1', '169, 14, 152, -1, -1, -1', '169, 15, 153, -1, -1, -1', '169, 16, 153, -1, -1, -1', '169, 17, 153, -1, -1, -1', '169, 18, 154, -1, -1, -1', '169, 19, 153, -1, -1, -1', '169, 20, 153, -1, -1, -1', '169, 21, 153, -1, -1, -1', '169, 22, 152, -1, -1, -1', '170, 5, 149, -1, -1, -1', '170, 6, 151, -1, -1, -1', '170, 7, 151, -1, -1, -1', '170, 8, 151, -1, -1, -1', '170, 9, 151, -1, -1, -1', '170, 10, 151, -1, -1, -1', '170, 11, 151, -1, -1, -1', '170, 14, 152, -1, -1, -1', '170, 15, 153, -1, -1, -1', '170, 16, 154, -1, -1, -1', '170, 17, 154, -1, -1, -1', '170, 18, 154, -1, -1, -1', '170, 19, 154, -1, -1, -1', '170, 20, 153, -1, -1, -1', '170, 21, 153, -1, -1, -1', '170, 22, 152, -1, -1, -1', '171, 5, 149, -1, -1, -1', '171, 6, 151, -1, -1, -1', '171, 7, 151, -1, -1, -1', '171, 8, 151, -1, -1, -1', '171, 9, 151, -1, -1, -1', '171, 10, 151, -1, -1, -1', '171, 11, 151, -1, -1, -1', '171, 14, 152, -1, -1, -1', '171, 15, 153, -1, -1, -1', '171, 16, 154, -1, -1, -1', '171, 17, 154, -1, -1, -1', '171, 18, 154, -1, -1, -1', '171, 19, 154, -1, -1, -1', '171, 20, 153, -1, -1, -1', '171, 21, 153, -1, -1, -1', '171, 22, 152, -1, -1, -1', '172, 4, 148, -1, -1, -1', '172, 5, 150, -1, -1, -1', '172, 6, 151, -1, -1, -1', '172, 7, 151, -1, -1, -1', '172, 8, 151, -1, -1, -1', '172, 9, 151, -1, -1, -1', '172, 10, 151, -1, -1, -1', '172, 11, 151, -1, -1, -1', '172, 13, 152, -1, -1, -1', '172, 14, 152, -1, -1, -1', '172, 15, 153, -1, -1, -1', '172, 16, 154, -1, -1, -1', '172, 17, 154, -1, -1, -1', '172, 18, 154, -1, -1, -1', '172, 19, 154, -1, -1, -1', '172, 20, 154, -1, -1, -1', '172, 21, 153, -1, -1, -1', '172, 22, 152, -1, -1, -1', '173, 4, 148, -1, -1, -1', '173, 5, 149, -1, -1, -1', '173, 6, 149, -1, -1, -1', '173, 7, 150, -1, -1, -1', '173, 8, 151, -1, -1, -1', '173, 9, 151, -1, -1, -1', '173, 10, 151, -1, -1, -1', '173, 13, 152, -1, -1, -1', '173, 14, 152, -1, -1, -1', '173, 15, 153, -1, -1, -1', '173, 16, 154, -1, -1, -1', '173, 17, 154, -1, -1, -1', '173, 18, 154, -1, -1, -1', '173, 19, 154, -1, -1, -1', '173, 20, 154, -1, -1, -1', '173, 21, 154, -1, -1, -1', '173, 22, 153, -1, -1, -1', '173, 23, 152, -1, -1, -1', '174, 7, 149, -1, -1, -1', '174, 8, 151, -1, -1, -1', '174, 9, 151, -1, -1, -1', '174, 10, 151, -1, -1, -1', '174, 13, 152, -1, -1, -1', '174, 14, 153, -1, -1, -1', '174, 15, 153, -1, -1, -1', '174, 16, 154, -1, -1, -1', '174, 17, 154, -1, -1, -1', '174, 18, 155, -1, -1, -1', '174, 19, 154, -1, -1, -1', '174, 20, 154, -1, -1, -1', '174, 21, 154, -1, -1, -1', '174, 22, 153, -1, -1, -1', '174, 23, 152, -1, -1, -1', '175, 6, 148, -1, -1, -1', '175, 7, 150, -1, -1, -1', '175, 8, 151, -1, -1, -1', '175, 9, 151, -1, -1, -1', '175, 10, 151, -1, -1, -1', '175, 13, 153, -1, -1, -1', '175, 14, 152, -1, -1, -1', '175, 15, 153, -1, -1, -1', '175, 16, 154, -1, -1, -1', '175, 17, 154, -1, -1, -1', '175, 18, 154, -1, -1, -1', '175, 19, 154, -1, -1, -1', '175, 20, 154, -1, -1, -1', '175, 21, 154, -1, -1, -1', '175, 22, 153, -1, -1, -1', '175, 23, 152, -1, -1, -1', '175, 24, 152, -1, -1, -1', '176, 6, 149, -1, -1, -1', '176, 7, 151, -1, -1, -1', '176, 8, 151, -1, -1, -1', '176, 9, 151, -1, -1, -1', '176, 10, 151, -1, -1, -1', '176, 13, 152, -1, -1, -1', '176, 14, 153, -1, -1, -1', '176, 15, 152, -1, -1, -1', '176, 16, 154, -1, -1, -1', '176, 17, 154, -1, -1, -1', '176, 18, 154, -1, -1, -1', '176, 19, 154, -1, -1, -1', '176, 20, 154, -1, -1, -1', '176, 21, 154, -1, -1, -1', '176, 22, 154, -1, -1, -1', '176, 23, 153, -1, -1, -1', '176, 24, 152, -1, -1, -1', '177, 6, 149, -1, -1, -1', '177, 7, 151, -1, -1, -1', '177, 8, 151, -1, -1, -1', '177, 9, 151, -1, -1, -1', '177, 10, 151, -1, -1, -1', '177, 15, 152, -1, -1, -1', '177, 16, 154, -1, -1, -1', '177, 17, 154, -1, -1, -1', '177, 18, 155, -1, -1, -1', '177, 19, 154, -1, -1, -1', '177, 20, 154, -1, -1, -1', '177, 21, 154, -1, -1, -1', '177, 22, 154, -1, -1, -1', '177, 23, 153, -1, -1, -1', '177, 24, 152, -1, -1, -1', '178, 6, 149, -1, -1, -1', '178, 7, 151, -1, -1, -1', '178, 8, 151, -1, -1, -1', '178, 9, 151, -1, -1, -1', '178, 10, 151, -1, -1, -1', '178, 11, 151, -1, -1, -1', '178, 15, 152, -1, -1, -1', '178, 16, 152, -1, -1, -1', '178, 17, 153, -1, -1, -1', '178, 18, 153, -1, -1, -1', '178, 19, 154, -1, -1, -1', '178, 20, 154, -1, -1, -1', '178, 21, 154, -1, -1, -1', '178, 22, 154, -1, -1, -1', '178, 23, 153, -1, -1, -1', '178, 24, 152, -1, -1, -1', '178, 25, 152, -1, -1, -1', '179, 6, 149, -1, -1, -1', '179, 7, 151, -1, -1, -1', '179, 8, 151, -1, -1, -1', '179, 9, 151, -1, -1, -1', '179, 10, 151, -1, -1, -1', '179, 11, 151, -1, -1, -1', '179, 12, 151, -1, -1, -1', '179, 13, 151, -1, -1, -1', '179, 16, 152, -1, -1, -1', '179, 17, 153, -1, -1, -1', '179, 18, 154, -1, -1, -1', '179, 19, 154, -1, -1, -1', '179, 20, 154, -1, -1, -1', '179, 21, 153, -1, -1, -1', '179, 22, 154, -1, -1, -1', '179, 23, 154, -1, -1, -1', '179, 24, 153, -1, -1, -1', '179, 25, 152, -1, -1, -1', '180, 6, 148, -1, -1, -1', '180, 7, 150, -1, -1, -1', '180, 8, 151, -1, -1, -1', '180, 9, 151, -1, -1, -1', '180, 10, 151, -1, -1, -1', '180, 11, 151, -1, -1, -1', '180, 12, 151, -1, -1, -1', '180, 13, 151, -1, -1, -1', '180, 16, 152, -1, -1, -1', '180, 17, 153, -1, -1, -1', '180, 18, 153, -1, -1, -1', '180, 19, 154, -1, -1, -1', '180, 20, 154, -1, -1, -1', '180, 21, 154, -1, -1, -1', '180, 22, 154, -1, -1, -1', '180, 23, 154, -1, -1, -1', '180, 24, 153, -1, -1, -1', '180, 25, 152, -1, -1, -1', '180, 26, 152, -1, -1, -1', '181, 7, 149, -1, -1, -1', '181, 8, 151, -1, -1, -1', '181, 9, 151, -1, -1, -1', '181, 10, 151, -1, -1, -1', '181, 11, 151, -1, -1, -1', '181, 12, 151, -1, -1, -1', '181, 13, 151, -1, -1, -1', '181, 15, 152, -1, -1, -1', '181, 16, 152, -1, -1, -1', '181, 17, 153, -1, -1, -1', '181, 18, 154, -1, -1, -1', '181, 19, 154, -1, -1, -1', '181, 20, 154, -1, -1, -1', '181, 21, 154, -1, -1, -1', '181, 22, 154, -1, -1, -1', '181, 23, 154, -1, -1, -1', '181, 24, 153, -1, -1, -1', '181, 25, 152, -1, -1, -1', '181, 26, 152, -1, -1, -1', '182, 7, 148, -1, -1, -1', '182, 8, 150, -1, -1, -1', '182, 9, 151, -1, -1, -1', '182, 10, 151, -1, -1, -1', '182, 11, 151, -1, -1, -1', '182, 15, 153, -1, -1, -1', '182, 16, 152, -1, -1, -1', '182, 17, 153, -1, -1, -1', '182, 18, 154, -1, -1, -1', '182, 19, 153, -1, -1, -1', '182, 20, 154, -1, -1, -1', '182, 21, 154, -1, -1, -1', '182, 22, 154, -1, -1, -1', '182, 23, 154, -1, -1, -1', '182, 24, 154, -1, -1, -1', '182, 25, 153, -1, -1, -1', '182, 26, 152, -1, -1, -1', '183, 8, 149, -1, -1, -1', '183, 9, 151, -1, -1, -1', '183, 10, 151, -1, -1, -1', '183, 11, 151, -1, -1, -1', '183, 15, 152, -1, -1, -1', '183, 16, 153, -1, -1, -1', '183, 17, 153, -1, -1, -1', '183, 18, 154, -1, -1, -1', '183, 19, 154, -1, -1, -1', '183, 20, 154, -1, -1, -1', '183, 21, 154, -1, -1, -1', '183, 22, 154, -1, -1, -1', '183, 23, 154, -1, -1, -1', '183, 24, 153, -1, -1, -1', '183, 25, 153, -1, -1, -1', '183, 26, 152, -1, -1, -1', '183, 27, 152, -1, -1, -1', '183, 28, 152, -1, -1, -1', '184, 8, 149, -1, -1, -1', '184, 9, 151, -1, -1, -1', '184, 10, 151, -1, -1, -1', '184, 11, 151, -1, -1, -1', '184, 14, 152, -1, -1, -1', '184, 15, 152, -1, -1, -1', '184, 16, 153, -1, -1, -1', '184, 17, 154, -1, -1, -1', '184, 18, 154, -1, -1, -1', '184, 19, 155, -1, -1, -1', '184, 20, 153, -1, -1, -1', '184, 21, 154, -1, -1, -1', '184, 22, 154, -1, -1, -1', '184, 23, 154, -1, -1, -1', '184, 24, 154, -1, -1, -1', '184, 25, 153, -1, -1, -1', '184, 26, 153, -1, -1, -1', '184, 27, 153, -1, -1, -1', '184, 28, 152, -1, -1, -1', '185, 8, 149, -1, -1, -1', '185, 9, 151, -1, -1, -1', '185, 10, 151, -1, -1, -1', '185, 11, 151, -1, -1, -1', '185, 14, 152, -1, -1, -1', '185, 15, 152, -1, -1, -1', '185, 16, 153, -1, -1, -1', '185, 17, 154, -1, -1, -1', '185, 18, 154, -1, -1, -1', '185, 19, 155, -1, -1, -1', '185, 20, 154, -1, -1, -1', '185, 21, 154, -1, -1, -1', '185, 22, 155, -1, -1, -1', '185, 23, 154, -1, -1, -1', '185, 24, 154, -1, -1, -1', '185, 25, 153, -1, -1, -1', '185, 26, 153, -1, -1, -1', '185, 27, 153, -1, -1, -1', '185, 28, 152, -1, -1, -1', '186, 8, 149, -1, -1, -1', '186, 9, 151, -1, -1, -1', '186, 10, 151, -1, -1, -1', '186, 11, 151, -1, -1, -1', '186, 14, 152, -1, -1, -1', '186, 15, 152, -1, -1, -1', '186, 16, 153, -1, -1, -1', '186, 17, 153, -1, -1, -1', '186, 18, 154, -1, -1, -1', '186, 19, 155, -1, -1, -1', '186, 20, 154, -1, -1, -1', '186, 21, 154, -1, -1, -1', '186, 22, 154, -1, -1, -1', '186, 23, 155, -1, -1, -1', '186, 24, 154, -1, -1, -1', '186, 25, 153, -1, -1, -1', '186, 26, 153, -1, -1, -1', '186, 27, 153, -1, -1, -1', '186, 28, 152, -1, -1, -1', '186, 195, 148, -1, -1, -1', '186, 196, 149, -1, -1, -1', '186, 197, 148, -1, -1, -1', '187, 8, 149, -1, -1, -1', '187, 9, 151, -1, -1, -1', '187, 10, 151, -1, -1, -1', '187, 11, 151, -1, -1, -1', '187, 12, 151, -1, -1, -1', '187, 14, 152, -1, -1, -1', '187, 15, 152, -1, -1, -1', '187, 16, 152, -1, -1, -1', '187, 17, 153, -1, -1, -1', '187, 18, 154, -1, -1, -1', '187, 19, 155, -1, -1, -1', '187, 20, 153, -1, -1, -1', '187, 21, 154, -1, -1, -1', '187, 22, 154, -1, -1, -1', '187, 23, 154, -1, -1, -1', '187, 24, 155, -1, -1, -1', '187, 25, 154, -1, -1, -1', '187, 26, 154, -1, -1, -1', '187, 27, 153, -1, -1, -1', '187, 28, 153, -1, -1, -1', '187, 29, 152, -1, -1, -1', '187, 38, 147, -1, -1, -1', '187, 39, 147, -1, -1, -1', '187, 190, 148, -1, -1, -1', '187, 191, 149, -1, -1, -1', '187, 192, 149, -1, -1, -1', '187, 193, 149, -1, -1, -1', '187, 194, 149, -1, -1, -1', '187, 195, 150, -1, -1, -1', '187, 196, 151, -1, -1, -1', '187, 197, 149, -1, -1, -1', '188, 8, 149, -1, -1, -1', '188, 9, 151, -1, -1, -1', '188, 10, 151, -1, -1, -1', '188, 11, 151, -1, -1, -1', '188, 12, 151, -1, -1, -1', '188, 15, 152, -1, -1, -1', '188, 16, 152, -1, -1, -1', '188, 17, 153, -1, -1, -1', '188, 18, 153, -1, -1, -1', '188, 19, 154, -1, -1, -1', '188, 20, 154, -1, -1, -1', '188, 21, 154, -1, -1, -1', '188, 22, 154, -1, -1, -1', '188, 23, 154, -1, -1, -1', '188, 24, 154, -1, -1, -1', '188, 25, 154, -1, -1, -1', '188, 26, 154, -1, -1, -1', '188, 27, 153, -1, -1, -1', '188, 28, 153, -1, -1, -1', '188, 29, 152, -1, -1, -1', '188, 37, 147, -1, -1, -1', '188, 38, 147, -1, -1, -1', '188, 39, 147, -1, -1, -1', '188, 190, 149, -1, -1, -1', '188, 191, 151, -1, -1, -1', '188, 192, 151, -1, -1, -1', '188, 193, 151, -1, -1, -1', '188, 194, 151, -1, -1, -1', '188, 195, 151, -1, -1, -1', '188, 196, 150, -1, -1, -1', '188, 197, 148, -1, -1, -1', '189, 8, 148, -1, -1, -1', '189, 9, 150, -1, -1, -1', '189, 10, 151, -1, -1, -1', '189, 11, 151, -1, -1, -1', '189, 12, 151, -1, -1, -1', '189, 13, 151, -1, -1, -1', '189, 16, 152, -1, -1, -1', '189, 17, 152, -1, -1, -1', '189, 18, 153, -1, -1, -1', '189, 19, 154, -1, -1, -1', '189, 20, 154, -1, -1, -1', '189, 21, 154, -1, -1, -1', '189, 22, 154, -1, -1, -1', '189, 23, 154, -1, -1, -1', '189, 24, 154, -1, -1, -1', '189, 25, 155, -1, -1, -1', '189, 26, 155, -1, -1, -1', '189, 27, 154, -1, -1, -1', '189, 28, 153, -1, -1, -1', '189, 29, 152, -1, -1, -1', '189, 30, 152, -1, -1, -1', '189, 36, 147, -1, -1, -1', '189, 37, 147, -1, -1, -1', '189, 38, 147, -1, -1, -1', '189, 39, 147, -1, -1, -1', '189, 44, 147, -1, -1, -1', '189, 190, 148, -1, -1, -1', '189, 191, 149, -1, -1, -1', '189, 192, 150, -1, -1, -1', '189, 193, 151, -1, -1, -1', '189, 194, 151, -1, -1, -1', '189, 195, 150, -1, -1, -1', '189, 196, 148, -1, -1, -1', '190, 9, 148, -1, -1, -1', '190, 10, 150, -1, -1, -1', '190, 11, 151, -1, -1, -1', '190, 12, 151, -1, -1, -1', '190, 13, 151, -1, -1, -1', '190, 17, 152, -1, -1, -1', '190, 18, 153, -1, -1, -1', '190, 19, 154, -1, -1, -1', '190, 20, 154, -1, -1, -1', '190, 21, 154, -1, -1, -1', '190, 22, 154, -1, -1, -1', '190, 23, 154, -1, -1, -1', '190, 24, 154, -1, -1, -1', '190, 25, 154, -1, -1, -1', '190, 26, 155, -1, -1, -1', '190, 27, 154, -1, -1, -1', '190, 28, 153, -1, -1, -1', '190, 29, 153, -1, -1, -1', '190, 30, 152, -1, -1, -1', '190, 35, 147, -1, -1, -1', '190, 36, 147, -1, -1, -1', '190, 37, 147, -1, -1, -1', '190, 38, 147, -1, -1, -1', '190, 39, 147, -1, -1, -1', '190, 40, 147, -1, -1, -1', '190, 44, 147, -1, -1, -1', '190, 45, 147, -1, -1, -1', '190, 192, 149, -1, -1, -1', '190, 193, 151, -1, -1, -1', '190, 194, 151, -1, -1, -1', '190, 195, 150, -1, -1, -1', '190, 196, 148, -1, -1, -1', '191, 10, 149, -1, -1, -1', '191, 11, 150, -1, -1, -1', '191, 12, 151, -1, -1, -1', '191, 13, 151, -1, -1, -1', '191, 18, 152, -1, -1, -1', '191, 19, 154, -1, -1, -1', '191, 20, 153, -1, -1, -1', '191, 21, 154, -1, -1, -1', '191, 22, 154, -1, -1, -1', '191, 23, 155, -1, -1, -1', '191, 24, 154, -1, -1, -1', '191, 25, 154, -1, -1, -1', '191, 26, 155, -1, -1, -1', '191, 27, 154, -1, -1, -1', '191, 28, 154, -1, -1, -1', '191, 29, 153, -1, -1, -1', '191, 30, 154, -1, -1, -1', '191, 31, 152, -1, -1, -1', '191, 35, 147, -1, -1, -1', '191, 36, 147, -1, -1, -1', '191, 37, 147, -1, -1, -1', '191, 38, 147, -1, -1, -1', '191, 39, 147, -1, -1, -1', '191, 40, 147, -1, -1, -1', '191, 44, 147, -1, -1, -1', '191, 45, 147, -1, -1, -1', '191, 46, 147, -1, -1, -1', '191, 192, 148, -1, -1, -1', '191, 193, 150, -1, -1, -1', '191, 194, 151, -1, -1, -1', '191, 195, 151, -1, -1, -1', '191, 196, 149, -1, -1, -1', '192, 10, 148, -1, -1, -1', '192, 11, 150, -1, -1, -1', '192, 12, 151, -1, -1, -1', '192, 13, 151, -1, -1, -1', '192, 18, 152, -1, -1, -1', '192, 19, 153, -1, -1, -1', '192, 20, 154, -1, -1, -1', '192, 21, 154, -1, -1, -1', '192, 22, 154, -1, -1, -1', '192, 23, 154, -1, -1, -1', '192, 24, 154, -1, -1, -1', '192, 25, 153, -1, -1, -1', '192, 26, 154, -1, -1, -1', '192, 27, 155, -1, -1, -1', '192, 28, 154, -1, -1, -1', '192, 29, 154, -1, -1, -1', '192, 30, 153, -1, -1, -1', '192, 31, 152, -1, -1, -1', '192, 35, 147, -1, -1, -1', '192, 36, 147, -1, -1, -1', '192, 37, 147, -1, -1, -1', '192, 38, 147, -1, -1, -1', '192, 39, 147, -1, -1, -1', '192, 40, 147, -1, -1, -1', '192, 44, 147, -1, -1, -1', '192, 45, 147, -1, -1, -1', '192, 46, 147, -1, -1, -1', '192, 47, 147, -1, -1, -1', '192, 193, 148, -1, -1, -1', '192, 194, 149, -1, -1, -1', '192, 195, 149, -1, -1, -1', '192, 196, 148, -1, -1, -1', '193, 11, 149, -1, -1, -1', '193, 12, 151, -1, -1, -1', '193, 13, 151, -1, -1, -1', '193, 14, 151, -1, -1, -1', '193, 15, 151, -1, -1, -1', '193, 18, 152, -1, -1, -1', '193, 19, 153, -1, -1, -1', '193, 20, 154, -1, -1, -1', '193, 21, 154, -1, -1, -1', '193, 22, 154, -1, -1, -1', '193, 23, 154, -1, -1, -1', '193, 24, 154, -1, -1, -1', '193, 25, 154, -1, -1, -1', '193, 26, 154, -1, -1, -1', '193, 27, 155, -1, -1, -1', '193, 28, 154, -1, -1, -1', '193, 29, 154, -1, -1, -1', '193, 30, 153, -1, -1, -1', '193, 31, 152, -1, -1, -1', '193, 34, 147, -1, -1, -1', '193, 35, 147, -1, -1, -1', '193, 36, 147, -1, -1, -1', '193, 37, 147, -1, -1, -1', '193, 38, 147, -1, -1, -1', '193, 39, 147, -1, -1, -1', '193, 40, 147, -1, -1, -1', '193, 44, 147, -1, -1, -1', '193, 45, 147, -1, -1, -1', '193, 46, 147, -1, -1, -1', '193, 47, 147, -1, -1, -1', '194, 11, 149, -1, -1, -1', '194, 12, 151, -1, -1, -1', '194, 13, 151, -1, -1, -1', '194, 14, 151, -1, -1, -1', '194, 15, 151, -1, -1, -1', '194, 18, 152, -1, -1, -1', '194, 19, 152, -1, -1, -1', '194, 20, 153, -1, -1, -1', '194, 21, 154, -1, -1, -1', '194, 22, 154, -1, -1, -1', '194, 23, 154, -1, -1, -1', '194, 24, 155, -1, -1, -1', '194, 25, 154, -1, -1, -1', '194, 26, 154, -1, -1, -1', '194, 27, 154, -1, -1, -1', '194, 28, 154, -1, -1, -1', '194, 29, 154, -1, -1, -1', '194, 30, 153, -1, -1, -1', '194, 31, 152, -1, -1, -1', '194, 35, 147, -1, -1, -1', '194, 36, 147, -1, -1, -1', '194, 37, 147, -1, -1, -1', '194, 38, 147, -1, -1, -1', '194, 39, 147, -1, -1, -1', '194, 44, 147, -1, -1, -1', '194, 45, 147, -1, -1, -1', '194, 46, 147, -1, -1, -1', '194, 47, 147, -1, -1, -1', '195, 11, 149, -1, -1, -1', '195, 12, 151, -1, -1, -1', '195, 13, 151, -1, -1, -1', '195, 14, 151, -1, -1, -1', '195, 15, 151, -1, -1, -1', '195, 19, 152, -1, -1, -1', '195, 20, 153, -1, -1, -1', '195, 21, 154, -1, -1, -1', '195, 22, 154, -1, -1, -1', '195, 23, 155, -1, -1, -1', '195, 24, 154, -1, -1, -1', '195, 25, 155, -1, -1, -1', '195, 26, 154, -1, -1, -1', '195, 27, 154, -1, -1, -1', '195, 28, 155, -1, -1, -1', '195, 29, 154, -1, -1, -1', '195, 30, 153, -1, -1, -1', '195, 31, 152, -1, -1, -1', '195, 32, 152, -1, -1, -1', '195, 35, 147, -1, -1, -1', '195, 36, 147, -1, -1, -1', '195, 37, 147, -1, -1, -1', '195, 38, 147, -1, -1, -1', '195, 43, 147, -1, -1, -1', '195, 44, 147, -1, -1, -1', '195, 45, 147, -1, -1, -1', '195, 46, 147, -1, -1, -1', '195, 47, 147, -1, -1, -1', '195, 48, 147, -1, -1, -1', '196, 10, 148, -1, -1, -1', '196, 11, 150, -1, -1, -1', '196, 12, 151, -1, -1, -1', '196, 13, 151, -1, -1, -1', '196, 14, 151, -1, -1, -1', '196, 15, 151, -1, -1, -1', '196, 16, 151, -1, -1, -1', '196, 19, 152, -1, -1, -1', '196, 20, 153, -1, -1, -1', '196, 21, 154, -1, -1, -1', '196, 22, 155, -1, -1, -1', '196, 23, 154, -1, -1, -1', '196, 24, 154, -1, -1, -1', '196, 25, 154, -1, -1, -1', '196, 26, 154, -1, -1, -1', '196, 27, 154, -1, -1, -1', '196, 28, 155, -1, -1, -1', '196, 29, 154, -1, -1, -1', '196, 30, 154, -1, -1, -1', '196, 31, 152, -1, -1, -1', '196, 32, 152, -1, -1, -1', '196, 35, 147, -1, -1, -1', '196, 36, 147, -1, -1, -1', '196, 37, 147, -1, -1, -1', '196, 42, 147, -1, -1, -1', '196, 43, 147, -1, -1, -1', '196, 44, 147, -1, -1, -1', '196, 45, 147, -1, -1, -1', '196, 46, 147, -1, -1, -1', '196, 47, 147, -1, -1, -1', '196, 48, 147, -1, -1, -1', '196, 191, 148, -1, -1, -1', '196, 192, 149, -1, -1, -1', '196, 193, 149, -1, -1, -1', '196, 194, 148, -1, -1, -1', '197, 10, 149, -1, -1, -1', '197, 11, 150, -1, -1, -1', '197, 12, 151, -1, -1, -1', '197, 13, 151, -1, -1, -1', '197, 14, 151, -1, -1, -1', '197, 15, 151, -1, -1, -1', '197, 16, 151, -1, -1, -1', '197, 19, 152, -1, -1, -1', '197, 20, 153, -1, -1, -1', '197, 21, 154, -1, -1, -1', '197, 22, 155, -1, -1, -1', '197, 23, 154, -1, -1, -1', '197, 24, 154, -1, -1, -1', '197, 25, 154, -1, -1, -1', '197, 26, 155, -1, -1, -1', '197, 27, 154, -1, -1, -1', '197, 28, 155, -1, -1, -1', '197, 29, 154, -1, -1, -1', '197, 30, 154, -1, -1, -1', '197, 31, 153, -1, -1, -1', '197, 32, 152, -1, -1, -1', '197, 35, 147, -1, -1, -1', '197, 36, 147, -1, -1, -1', '197, 37, 147, -1, -1, -1', '197, 42, 147, -1, -1, -1', '197, 43, 147, -1, -1, -1', '197, 44, 147, -1, -1, -1', '197, 45, 147, -1, -1, -1', '197, 46, 147, -1, -1, -1', '197, 47, 147, -1, -1, -1', '197, 48, 147, -1, -1, -1', '197, 191, 149, -1, -1, -1', '197, 192, 151, -1, -1, -1', '197, 193, 151, -1, -1, -1', '197, 194, 149, -1, -1, -1', '198, 10, 149, -1, -1, -1', '198, 11, 150, -1, -1, -1', '198, 12, 151, -1, -1, -1', '198, 13, 151, -1, -1, -1', '198, 14, 151, -1, -1, -1', '198, 15, 151, -1, -1, -1', '198, 16, 151, -1, -1, -1', '198, 19, 152, -1, -1, -1', '198, 20, 154, -1, -1, -1', '198, 21, 154, -1, -1, -1', '198, 22, 154, -1, -1, -1', '198, 23, 154, -1, -1, -1', '198, 24, 155, -1, -1, -1', '198, 25, 155, -1, -1, -1', '198, 26, 154, -1, -1, -1', '198, 27, 155, -1, -1, -1', '198, 28, 155, -1, -1, -1', '198, 29, 154, -1, -1, -1', '198, 30, 154, -1, -1, -1', '198, 31, 153, -1, -1, -1', '198, 32, 152, -1, -1, -1', '198, 35, 147, -1, -1, -1', '198, 36, 147, -1, -1, -1', '198, 37, 147, -1, -1, -1', '198, 41, 147, -1, -1, -1', '198, 42, 147, -1, -1, -1', '198, 43, 147, -1, -1, -1', '198, 44, 147, -1, -1, -1', '198, 45, 147, -1, -1, -1', '198, 46, 147, -1, -1, -1', '198, 47, 147, -1, -1, -1', '198, 48, 147, -1, -1, -1', '198, 191, 149, -1, -1, -1', '198, 192, 151, -1, -1, -1', '198, 193, 151, -1, -1, -1', '198, 194, 149, -1, -1, -1', '199, 9, 148, -1, -1, -1', '199, 10, 150, -1, -1, -1', '199, 11, 151, -1, -1, -1', '199, 12, 151, -1, -1, -1', '199, 13, 151, -1, -1, -1', '199, 14, 151, -1, -1, -1', '199, 15, 151, -1, -1, -1', '199, 16, 151, -1, -1, -1', '199, 19, 153, -1, -1, -1', '199, 20, 153, -1, -1, -1', '199, 21, 154, -1, -1, -1', '199, 22, 154, -1, -1, -1', '199, 23, 155, -1, -1, -1', '199, 24, 154, -1, -1, -1', '199, 25, 154, -1, -1, -1', '199, 26, 154, -1, -1, -1', '199, 27, 154, -1, -1, -1', '199, 28, 155, -1, -1, -1', '199, 29, 154, -1, -1, -1', '199, 30, 154, -1, -1, -1', '199, 31, 153, -1, -1, -1', '199, 32, 153, -1, -1, -1', '199, 35, 147, -1, -1, -1', '199, 36, 147, -1, -1, -1', '199, 37, 147, -1, -1, -1', '199, 41, 147, -1, -1, -1', '199, 42, 147, -1, -1, -1', '199, 43, 147, -1, -1, -1', '199, 44, 147, -1, -1, -1', '199, 45, 147, -1, -1, -1', '199, 48, 147, -1, -1, -1', '199, 49, 147, -1, -1, -1', '199, 191, 149, -1, -1, -1', '199, 192, 151, -1, -1, -1', '199, 193, 150, -1, -1, -1', '199, 194, 148, -1, -1, -1', '129, 125, 132, -1, -1, -1', '130, 124, 132, -1, -1, -1', '130, 125, 132, -1, -1, -1', '131, 124, 132, -1, -1, -1', '131, 125, 132, -1, -1, -1', '131, 127, 132, -1, -1, -1', '132, 122, 132, -1, -1, -1', '132, 123, 132, -1, -1, -1', '132, 124, 132, -1, -1, -1', '132, 125, 132, -1, -1, -1', '132, 126, 132, -1, -1, -1', '132, 127, 132, -1, -1, -1', '133, 123, 132, -1, -1, -1', '133, 124, 132, -1, -1, -1', '133, 125, 132, -1, -1, -1', '133, 126, 132, -1, -1, -1', '134, 123, 132, -1, -1, -1', '134, 124, 132, -1, -1, -1', '134, 125, 132, -1, -1, -1', '134, 126, 132, -1, -1, -1', '134, 127, 132, -1, -1, -1', '135, 125, 132, -1, -1, -1', '135, 126, 132, -1, -1, -1', '135, 127, 132, -1, -1, -1', '136, 127, 132, -1, -1, -1'], False, False);
end;


procedure OnMissionStart;
begin
{Sounds}
{Waterfalls}
  Actions.PlayWAVAtLocationLooped(-1, 'Waterfall Creek', 2.5, 32, 91, 7);
  Actions.PlayWAVAtLocationLooped(-1, 'Fall', 2.5, 32, 91, 22);
  Actions.PlayWAVAtLocationLooped(-1, 'Small Fall', 2.3, 32, 92, 33);
  Actions.PlayWAVAtLocationLooped(-1, 'Fall', 2.5, 32, 116, 87);
  Actions.PlayWAVAtLocationLooped(-1, 'Waterfall Creek', 2.5, 32, 61, 182);
  Actions.PlayWAVAtLocationLooped(-1, 'Small Fall', 2.5, 32, 113, 181);
  Actions.PlayWAVAtLocationLooped(-1, 'Fall', 2.5, 32, 118, 181);

{Lava}
  Actions.PlayWAVAtLocationLooped(-1, 'Lava 1', 3.5, 32, 140, 204);
  Actions.PlayWAVAtLocationLooped(-1, 'Lava 1', 3.5, 40, 131, 227);
  Actions.PlayWAVAtLocationLooped(-1, 'Lava 1', 3.5, 40, 150, 237);
  Actions.PlayWAVAtLocationLooped(-1, 'Lava 1', 3.5, 40, 186, 235);

  SetWareDistribution;

  BlockWares;

  UpdateAIEquipRates;

  UpdatePlayers;

  FindWolves;
  for I := 0 to 3 do
    SoundAllowed[I] := True;

  Actions.ShowMsg(-1, '<$1>');

  for I := 4 to 11 do
  for K := 4 to 11 do
    if (I <> K)
    and (States.PlayerEnabled(I))
    and (States.PlayerEnabled(K)) then
      Actions.PlayerAllianceNFogChange(I, K, True, True, False);
end;


procedure CheckGift;
begin
  for I := 0 to 3 do
  begin

    case States.KaMRandomI(18) of

      0: begin
           Ware[I] := 0;
           Count[I] := 4 + States.KaMRandomI(5);
         end;

      1: begin
           Ware[I] := 1;
           Count[I] := 8 + States.KaMRandomI(5);
         end;

      2: begin
           Ware[I] := 2;
           Count[I] := 8 + States.KaMRandomI(5);
         end;

      3: begin
           Ware[I] := 3;
           Count[I] := 3 + States.KaMRandomI(5);
         end;

      4: begin
           Ware[I] := 4;
           Count[I] := 3 + States.KaMRandomI(5);
         end;

      5: begin
           Ware[I] := 5;
           Count[I] := 3 + States.KaMRandomI(5);
         end;

      6: begin
           Ware[I] := 6;
           Count[I] := 2 + States.KaMRandomI(5);
         end;

      7: begin
           Ware[I] := 7;
           Count[I] := 2 + States.KaMRandomI(5);
         end;

      8: begin
           Ware[I] := 8;
           Count[I] := 3 + States.KaMRandomI(5);
         end;

      9: begin
           Ware[I] := 9;
           Count[I] := 3 + States.KaMRandomI(5);
         end;

      10: begin
            Ware[I] := 10;
            Count[I] := 3 + States.KaMRandomI(5);
          end;

      11: begin
            Ware[I] := 11;
            Count[I] := 2 + States.KaMRandomI(5);
          end;

      12: begin
            Ware[I] := 12;
            Count[I] := 2 + States.KaMRandomI(5);
          end;

      13: begin
            Ware[I] := 13;
            Count[I] := 2 + States.KaMRandomI(5);
          end;

      14: begin
            Ware[I] := 14;
            Count[I] := 2 + States.KaMRandomI(5);
          end;

      15: begin
            Ware[I] := 15;
            Count[I] := 2 + States.KaMRandomI(5);
          end;

      16: begin
            if States.KaMRandom > 0.75 then
            begin
              Ware[I] := 26;
              Count[I] := 2 + States.KaMRandomI(3);
            end
            else
            begin
              Ware[I] := States.KaMRandomI(10);
              Count[I] := 5 + States.KaMRandomI(5);
            end;
          end;

      17: begin
            Ware[I] := 27; 
            Count[I] := 3 + States.KaMRandomI(5);
          end;
    end;
  end;
end;


procedure OnUnitTrained(aUnitID: Integer);
begin
  Actions.UnitHungerSet(aUnitID, 21000);
end;


procedure OnWarriorEquipped(aUnitID, aGroupID: Integer);
begin
  Actions.UnitHungerSet(aUnitID, 21000);
end;


procedure AutoFeed(P: Integer);
var
  UnitsToFeed: array of Integer;
begin
  UnitsToFeed := States.PlayerGetAllUnits(P);
  if Length(UnitsToFeed) <= 0 then
    Exit;
  for K := 0 to Length(UnitsToFeed) - 1 do
    Actions.UnitHungerSet(UnitsToFeed[K], 27000);
end;


procedure GiveGifts;
begin
  CheckGift;
  for I := 0 to 3 do
  begin
    if (States.PlayerEnabled(I))
    and not (States.PlayerDefeated(I)) then
    begin
      Actions.GiveWares(I, Ware[I], Count[I]);
      Actions.ShowMsgFormatted(I, '<$0>', [Count[I], States.WareTypeName(Ware[I])]);
    end;
  end;
end;


procedure UpdateTargets;
var
  I: Integer;
begin
  AttackTargetY[4] := States.KaMRandomI(64) + 1;    //Top loc
  AttackTargetY[5] := States.KaMRandomI(64) + 1;    //Top loc
  AttackTargetY[6] := States.KaMRandomI(115) + 65;  //Middle locs
  AttackTargetY[7] := States.KaMRandomI(115) + 65;  //Middle locs
  AttackTargetY[8] := States.KaMRandomI(58) + 180;  //Bottom loc
  AttackTargetY[9] := States.KaMRandomI(115) + 65;  //Middle locs
  AttackTargetY[10] := States.KaMRandomI(115) + 65; //Middle locs
  for I := 4 to 10 do
  begin
    Actions.AIStartPosition(I, 10 + States.KaMRandomI(100), AttackTargetY[I]);
    if DEBUG_MODE then
      Actions.Log('Attack target for AI Player ' + IntToStr(I) + ': ' + InttoStr(AttackTargetY[I]));  
  end;
end;


procedure OnTick;
begin
  if States.GameTime mod DEPOSITS_TIME = 0 then
    UpdateDeposits;

  for I := 4 to 11 do
    if States.GameTime mod AUTOFEED_TIME = 5 * I then
      AutoFeed(I);

  if States.GameTime mod GIFT_TIME = 0 then
    GiveGifts;

  if States.GameTime mod TARGETS_TIME = 0 then
    UpdateTargets;

  for K := 0 to 3 do
    if SoundAllowed[K] then
    begin
      if (States.KaMRandom > 0.6)
      and (States.GameTime mod AMBIENT_TIME = 0) then
      begin
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 40, 27);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 10, 55);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 3, 95);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 3, 130);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 22, 172);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 68, 170);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 45, 150);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 72, 198);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 122, 217);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 116, 180);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 146, 157);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 153, 118);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 163, 91);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 164, 50);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 133, 55);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 90, 64);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 93, 36);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 92, 5);
      end;

      if (States.KaMRandom < 0.3)
      and (States.GameTime mod AMBIENT_TIME = 33) then
        if Length(Wolves) > 0 then
          for I := Low(Wolves) to High(Wolves) do
            if not States.UnitDead(Wolves[I]) then
              if States.KaMRandom < 0.25 then
                 Actions.PlayWAVAtLocation(K, 'Wolf' + IntToStr(1 + States.KaMRandomI(4)), Utils.MinS(States.KaMRandom, 0.35), 32, States.UnitPositionX(Wolves[I]), States.UnitPositionY(Wolves[I]));

    end;

end;