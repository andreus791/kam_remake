const
  RADIUS = 5;
  AUTOFEED_TIME = 6000;
  DEPOSITS_TIME = 600;
  FENCE_TIME = 100;
  ARMY_TYPE_TIME = 75;
  AMBIENT_TIME = 250;


var
  Barracks, AIGroup, Store0, Store1, ChangesCount: Integer;
  Msg: Boolean;
  Wolves: array of Integer;
  SoundAllowed: array[0..1] of Boolean;


procedure FindWolves;
var
  aX, aY, W: Integer;
begin
  for aX := 1 to States.MapWidth - 1 do
    for aY := 1 to States.MapHeight - 1 do
    begin
      W := States.UnitAt(aX, aY);
      if W > 0 then
        if States.UnitType(W) = 30 then
        begin
          SetLength(Wolves, Length(Wolves) + 1);
          if Length(Wolves) > 0 then
            Wolves[Length(Wolves) - 1] := W;
        end;
    end;
end;


procedure SetWareDistribution;
var
  I: Integer;
begin
  for I := 2 to 8 do
  begin
    Actions.PlayerWareDistribution(I, 6, 2, 5);
    Actions.PlayerWareDistribution(I, 6, 10, 5);
    Actions.PlayerWareDistribution(I, 5, 1, 5);
    Actions.PlayerWareDistribution(I, 5, 15, 5);
    Actions.PlayerWareDistribution(I, 5, 2, 5);
    Actions.PlayerWareDistribution(I, 5, 10, 5);
    Actions.PlayerWareDistribution(I, 2, 20, 5);
    Actions.PlayerWareDistribution(I, 2, 19, 5);
    Actions.PlayerWareDistribution(I, 9, 22, 5);
    Actions.PlayerWareDistribution(I, 9, 16, 5);
    Actions.PlayerWareDistribution(I, 9, 12, 5);
  end;
end;


procedure BlockWares;
var
  H: array of Integer;
  I, K: Integer;
begin
  for I := 2 to 8 do
  begin
    H := States.PlayerGetAllHouses(I);

    if Length(H) <= 0 then
      Exit;

    for K := Low(H) to High(H) do
      if States.HouseType(H[K]) = 11 then
      begin
        Actions.HouseWareBlock(H[K], 0, True);
        Actions.HouseWareBlock(H[K], 3, True);
        Actions.HouseWareBlock(H[K], 4, True);
        Actions.HouseWareBlock(H[K], 5, True);
        Actions.HouseWareBlock(H[K], 6, True);
        Actions.HouseWareBlock(H[K], 9, True);
        Actions.HouseWareBlock(H[K], 11, True);
        Actions.HouseWareBlock(H[K], 14, True);
        Actions.HouseWareBlock(H[K], 15, True);
      end;
  end;
end;


procedure UpdateDeposits;
begin
  Actions.MapTilesArraySetS(['1, 1, 145, -1, -1, -1', '1, 2, 145, -1, -1, -1', '1, 3, 145, -1, -1, -1', '1, 4, 146, -1, -1, -1', '1, 5, 147, -1, -1, -1', '1, 6, 146, -1, -1, -1', '1, 7, 145, -1, -1, -1', '1, 8, 147, -1, -1, -1', '1, 9, 146, -1, -1, -1', '1, 10, 145, -1, -1, -1', '1, 30, 148, -1, -1, -1', '1, 31, 149, -1, -1, -1', '1, 32, 149, -1, -1, -1', '1, 33, 148, -1, -1, -1', '1, 36, 153, -1, -1, -1', '1, 37, 153, -1, -1, -1', '1, 38, 155, -1, -1, -1', '1, 39, 154, -1, -1, -1', '1, 40, 155, -1, -1, -1', '1, 41, 155, -1, -1, -1', '1, 42, 155, -1, -1, -1', '1, 43, 154, -1, -1, -1', '1, 44, 154, -1, -1, -1', '1, 45, 155, -1, -1, -1', '1, 46, 155, -1, -1, -1', '1, 47, 155, -1, -1, -1', '1, 48, 155, -1, -1, -1', '1, 49, 155, -1, -1, -1', '1, 50, 155, -1, -1, -1', '1, 51, 155, -1, -1, -1', '1, 52, 155, -1, -1, -1', '1, 53, 155, -1, -1, -1', '1, 54, 154, -1, -1, -1', '1, 55, 153, -1, -1, -1', '1, 56, 153, -1, -1, -1', '1, 57, 152, -1, -1, -1', '2, 1, 146, -1, -1, -1', '2, 2, 146, -1, -1, -1', '2, 3, 147, -1, -1, -1', '2, 4, 145, -1, -1, -1', '2, 5, 147, -1, -1, -1', '2, 6, 144, -1, -1, -1', '2, 7, 145, -1, -1, -1', '2, 8, 147, -1, -1, -1', '2, 9, 145, -1, -1, -1', '2, 10, 145, -1, -1, -1', '2, 30, 150, -1, -1, -1', '2, 31, 150, -1, -1, -1', '2, 32, 151, -1, -1, -1', '2, 33, 149, -1, -1, -1', '2, 36, 152, -1, -1, -1', '2, 37, 153, -1, -1, -1', '2, 38, 154, -1, -1, -1', '2, 39, 154, -1, -1, -1', '2, 40, 155, -1, -1, -1', '2, 41, 155, -1, -1, -1', '2, 42, 155, -1, -1, -1', '2, 43, 155, -1, -1, -1', '2, 44, 155, -1, -1, -1', '2, 45, 155, -1, -1, -1', '2, 46, 155, -1, -1, -1', '2, 47, 154, -1, -1, -1', '2, 48, 154, -1, -1, -1', '2, 49, 154, -1, -1, -1', '2, 50, 154, -1, -1, -1', '2, 51, 154, -1, -1, -1', '2, 52, 154, -1, -1, -1', '2, 53, 154, -1, -1, -1', '2, 54, 154, -1, -1, -1', '2, 55, 153, -1, -1, -1', '2, 56, 152, -1, -1, -1', '2, 57, 152, -1, -1, -1', '3, 1, 147, -1, -1, -1', '3, 2, 146, -1, -1, -1', '3, 3, 146, -1, -1, -1', '3, 4, 146, -1, -1, -1', '3, 5, 147, -1, -1, -1', '3, 6, 146, -1, -1, -1', '3, 7, 146, -1, -1, -1', '3, 8, 146, -1, -1, -1', '3, 9, 146, -1, -1, -1', '3, 10, 144, -1, -1, -1', '3, 29, 149, -1, -1, -1', '3, 30, 150, -1, -1, -1', '3, 31, 151, -1, -1, -1', '3, 32, 150, -1, -1, -1', '3, 33, 148, -1, -1, -1', '3, 35, 152, -1, -1, -1', '3, 36, 152, -1, -1, -1', '3, 37, 153, -1, -1, -1', '3, 38, 154, -1, -1, -1', '3, 39, 155, -1, -1, -1', '3, 40, 155, -1, -1, -1', '3, 41, 154, -1, -1, -1', '3, 42, 155, -1, -1, -1', '3, 43, 155, -1, -1, -1', '3, 44, 155, -1, -1, -1', '3, 45, 154, -1, -1, -1', '3, 46, 154, -1, -1, -1', '3, 47, 154, -1, -1, -1', '3, 48, 153, -1, -1, -1', '3, 49, 153, -1, -1, -1', '3, 50, 153, -1, -1, -1', '3, 51, 154, -1, -1, -1', '3, 52, 154, -1, -1, -1', '3, 53, 153, -1, -1, -1', '3, 54, 153, -1, -1, -1', '3, 55, 152, -1, -1, -1', '3, 56, 152, -1, -1, -1', '4, 1, 147, -1, -1, -1', '4, 2, 144, -1, -1, -1', '4, 3, 146, -1, -1, -1', '4, 4, 147, -1, -1, -1', '4, 5, 147, -1, -1, -1', '4, 6, 147, -1, -1, -1', '4, 7, 146, -1, -1, -1', '4, 8, 145, -1, -1, -1', '4, 9, 144, -1, -1, -1', '4, 28, 148, -1, -1, -1', '4, 29, 150, -1, -1, -1', '4, 30, 150, -1, -1, -1', '4, 31, 149, -1, -1, -1', '4, 32, 149, -1, -1, -1', '4, 35, 152, -1, -1, -1', '4, 36, 153, -1, -1, -1', '4, 37, 153, -1, -1, -1', '4, 38, 154, -1, -1, -1', '4, 39, 155, -1, -1, -1', '4, 40, 155, -1, -1, -1', '4, 41, 154, -1, -1, -1', '4, 42, 155, -1, -1, -1', '4, 43, 155, -1, -1, -1', '4, 44, 154, -1, -1, -1', '4, 45, 154, -1, -1, -1', '4, 46, 152, -1, -1, -1', '4, 47, 152, -1, -1, -1', '4, 48, 152, -1, -1, -1', '4, 49, 152, -1, -1, -1', '4, 50, 152, -1, -1, -1', '4, 51, 152, -1, -1, -1', '4, 52, 152, -1, -1, -1', '4, 53, 153, -1, -1, -1', '4, 54, 152, -1, -1, -1', '5, 1, 147, -1, -1, -1', '5, 2, 147, -1, -1, -1', '5, 3, 146, -1, -1, -1', '5, 4, 146, -1, -1, -1', '5, 5, 144, -1, -1, -1', '5, 6, 146, -1, -1, -1', '5, 7, 144, -1, -1, -1', '5, 28, 150, -1, -1, -1', '5, 29, 151, -1, -1, -1', '5, 30, 151, -1, -1, -1', '5, 31, 150, -1, -1, -1', '5, 32, 148, -1, -1, -1', '5, 35, 152, -1, -1, -1', '5, 36, 153, -1, -1, -1', '5, 37, 154, -1, -1, -1', '5, 38, 155, -1, -1, -1', '5, 39, 155, -1, -1, -1', '5, 40, 154, -1, -1, -1', '5, 41, 155, -1, -1, -1', '5, 42, 155, -1, -1, -1', '5, 43, 154, -1, -1, -1', '5, 44, 154, -1, -1, -1', '5, 45, 153, -1, -1, -1', '5, 46, 152, -1, -1, -1', '5, 51, 152, -1, -1, -1', '5, 52, 153, -1, -1, -1', '5, 53, 152, -1, -1, -1', '5, 54, 152, -1, -1, -1', '6, 1, 147, -1, -1, -1', '6, 2, 147, -1, -1, -1', '6, 3, 147, -1, -1, -1', '6, 4, 144, -1, -1, -1', '6, 5, 146, -1, -1, -1', '6, 6, 144, -1, -1, -1', '6, 27, 149, -1, -1, -1', '6, 28, 150, -1, -1, -1', '6, 29, 150, -1, -1, -1', '6, 30, 150, -1, -1, -1', '6, 31, 149, -1, -1, -1', '6, 35, 152, -1, -1, -1', '6, 36, 153, -1, -1, -1', '6, 37, 154, -1, -1, -1', '6, 38, 155, -1, -1, -1', '6, 39, 155, -1, -1, -1', '6, 40, 154, -1, -1, -1', '6, 41, 155, -1, -1, -1', '6, 42, 154, -1, -1, -1', '6, 43, 154, -1, -1, -1', '6, 44, 153, -1, -1, -1', '6, 45, 152, -1, -1, -1', '6, 49, 148, -1, -1, -1', '7, 1, 146, -1, -1, -1', '7, 2, 146, -1, -1, -1', '7, 3, 147, -1, -1, -1', '7, 4, 145, -1, -1, -1', '7, 5, 145, -1, -1, -1', '7, 27, 150, -1, -1, -1', '7, 28, 151, -1, -1, -1', '7, 29, 150, -1, -1, -1', '7, 30, 150, -1, -1, -1', '7, 31, 148, -1, -1, -1', '7, 34, 152, -1, -1, -1', '7, 35, 153, -1, -1, -1', '7, 36, 153, -1, -1, -1', '7, 37, 154, -1, -1, -1', '7, 38, 155, -1, -1, -1', '7, 39, 154, -1, -1, -1', '7, 40, 154, -1, -1, -1', '7, 41, 154, -1, -1, -1', '7, 42, 154, -1, -1, -1', '7, 43, 153, -1, -1, -1', '7, 44, 152, -1, -1, -1', '7, 48, 149, -1, -1, -1', '7, 49, 150, -1, -1, -1', '7, 50, 149, -1, -1, -1', '8, 1, 145, -1, -1, -1', '8, 2, 147, -1, -1, -1', '8, 3, 147, -1, -1, -1', '8, 4, 146, -1, -1, -1', '8, 5, 144, -1, -1, -1', '8, 16, 144, -1, -1, -1', '8, 17, 146, -1, -1, -1', '8, 18, 146, -1, -1, -1', '8, 26, 149, -1, -1, -1', '8, 27, 150, -1, -1, -1', '8, 28, 150, -1, -1, -1', '8, 29, 148, -1, -1, -1', '8, 30, 149, -1, -1, -1', '8, 33, 152, -1, -1, -1', '8, 34, 153, -1, -1, -1', '8, 35, 153, -1, -1, -1', '8, 36, 154, -1, -1, -1', '8, 37, 155, -1, -1, -1', '8, 38, 155, -1, -1, -1', '8, 39, 155, -1, -1, -1', '8, 40, 155, -1, -1, -1', '8, 41, 154, -1, -1, -1', '8, 42, 153, -1, -1, -1', '8, 43, 152, -1, -1, -1', '8, 44, 152, -1, -1, -1', '8, 48, 150, -1, -1, -1', '8, 49, 151, -1, -1, -1', '8, 50, 151, -1, -1, -1', '9, 1, 144, -1, -1, -1', '9, 2, 145, -1, -1, -1', '9, 3, 145, -1, -1, -1', '9, 4, 144, -1, -1, -1', '9, 14, 146, -1, -1, -1', '9, 15, 144, -1, -1, -1', '9, 16, 146, -1, -1, -1', '9, 17, 147, -1, -1, -1', '9, 18, 146, -1, -1, -1', '9, 25, 148, -1, -1, -1', '9, 26, 150, -1, -1, -1', '9, 27, 149, -1, -1, -1', '9, 28, 150, -1, -1, -1', '9, 29, 150, -1, -1, -1', '9, 30, 148, -1, -1, -1', '9, 33, 152, -1, -1, -1', '9, 34, 153, -1, -1, -1', '9, 35, 154, -1, -1, -1', '9, 36, 154, -1, -1, -1', '9, 37, 155, -1, -1, -1', '9, 38, 154, -1, -1, -1', '9, 39, 155, -1, -1, -1', '9, 40, 154, -1, -1, -1', '9, 41, 154, -1, -1, -1', '9, 42, 153, -1, -1, -1', '9, 43, 152, -1, -1, -1', '9, 47, 149, -1, -1, -1', '9, 48, 150, -1, -1, -1', '9, 49, 150, -1, -1, -1', '9, 50, 150, -1, -1, -1', '10, 14, 147, -1, -1, -1', '10, 15, 146, -1, -1, -1', '10, 16, 146, -1, -1, -1', '10, 17, 144, -1, -1, -1', '10, 18, 146, -1, -1, -1', '10, 24, 148, -1, -1, -1', '10, 25, 150, -1, -1, -1', '10, 26, 149, -1, -1, -1', '10, 27, 150, -1, -1, -1', '10, 28, 150, -1, -1, -1', '10, 29, 148, -1, -1, -1', '10, 32, 152, -1, -1, -1', '10, 33, 153, -1, -1, -1', '10, 34, 153, -1, -1, -1', '10, 35, 154, -1, -1, -1', '10, 36, 155, -1, -1, -1', '10, 37, 154, -1, -1, -1', '10, 38, 154, -1, -1, -1', '10, 39, 154, -1, -1, -1', '10, 40, 154, -1, -1, -1', '10, 41, 153, -1, -1, -1', '10, 42, 152, -1, -1, -1', '10, 47, 150, -1, -1, -1', '10, 48, 150, -1, -1, -1', '10, 49, 150, -1, -1, -1', '10, 50, 149, -1, -1, -1', '11, 13, 147, -1, -1, -1', '11, 14, 147, -1, -1, -1', '11, 15, 147, -1, -1, -1', '11, 16, 145, -1, -1, -1', '11, 17, 146, -1, -1, -1', '11, 18, 145, -1, -1, -1', '11, 23, 148, -1, -1, -1', '11, 24, 150, -1, -1, -1', '11, 25, 148, -1, -1, -1', '11, 26, 151, -1, -1, -1', '11, 27, 151, -1, -1, -1', '11, 28, 149, -1, -1, -1', '11, 31, 152, -1, -1, -1', '11, 32, 152, -1, -1, -1', '11, 33, 153, -1, -1, -1', '11, 34, 154, -1, -1, -1', '11, 35, 154, -1, -1, -1', '11, 36, 155, -1, -1, -1', '11, 37, 155, -1, -1, -1', '11, 38, 154, -1, -1, -1', '11, 39, 154, -1, -1, -1', '11, 40, 153, -1, -1, -1', '11, 41, 152, -1, -1, -1', '11, 42, 152, -1, -1, -1', '11, 46, 149, -1, -1, -1', '11, 47, 151, -1, -1, -1', '11, 48, 150, -1, -1, -1', '11, 49, 150, -1, -1, -1', '11, 50, 149, -1, -1, -1', '12, 12, 146, -1, -1, -1', '12, 13, 146, -1, -1, -1', '12, 14, 146, -1, -1, -1', '12, 15, 147, -1, -1, -1', '12, 16, 145, -1, -1, -1', '12, 17, 147, -1, -1, -1', '12, 23, 149, -1, -1, -1', '12, 24, 150, -1, -1, -1', '12, 25, 151, -1, -1, -1', '12, 26, 148, -1, -1, -1', '12, 27, 150, -1, -1, -1', '12, 28, 148, -1, -1, -1', '12, 30, 152, -1, -1, -1', '12, 31, 152, -1, -1, -1', '12, 32, 153, -1, -1, -1', '12, 33, 153, -1, -1, -1', '12, 34, 154, -1, -1, -1', '12, 35, 155, -1, -1, -1', '12, 36, 154, -1, -1, -1', '12, 37, 154, -1, -1, -1', '12, 38, 154, -1, -1, -1', '12, 39, 153, -1, -1, -1', '12, 40, 152, -1, -1, -1', '12, 41, 152, -1, -1, -1', '12, 46, 149, -1, -1, -1', '12, 47, 151, -1, -1, -1', '12, 48, 150, -1, -1, -1', '12, 49, 150, -1, -1, -1', '12, 50, 150, -1, -1, -1', '12, 51, 148, -1, -1, -1', '13, 11, 147, -1, -1, -1', '13, 12, 147, -1, -1, -1', '13, 13, 147, -1, -1, -1', '13, 14, 146, -1, -1, -1', '13, 15, 147, -1, -1, -1', '13, 16, 146, -1, -1, -1', '13, 17, 146, -1, -1, -1', '13, 23, 149, -1, -1, -1', '13, 24, 151, -1, -1, -1', '13, 25, 150, -1, -1, -1', '13, 26, 150, -1, -1, -1', '13, 27, 148, -1, -1, -1', '13, 30, 153, -1, -1, -1', '13, 31, 152, -1, -1, -1', '13, 32, 153, -1, -1, -1', '13, 33, 154, -1, -1, -1', '13, 34, 155, -1, -1, -1', '13, 35, 154, -1, -1, -1', '13, 36, 155, -1, -1, -1', '13, 37, 154, -1, -1, -1', '13, 38, 153, -1, -1, -1', '13, 39, 153, -1, -1, -1', '13, 40, 152, -1, -1, -1', '13, 47, 150, -1, -1, -1', '13, 48, 150, -1, -1, -1', '13, 49, 150, -1, -1, -1', '13, 50, 150, -1, -1, -1', '13, 51, 148, -1, -1, -1', '14, 10, 147, -1, -1, -1', '14, 11, 144, -1, -1, -1', '14, 12, 147, -1, -1, -1', '14, 13, 147, -1, -1, -1', '14, 14, 146, -1, -1, -1', '14, 15, 147, -1, -1, -1', '14, 16, 146, -1, -1, -1', '14, 17, 147, -1, -1, -1', '14, 23, 149, -1, -1, -1', '14, 24, 150, -1, -1, -1', '14, 25, 151, -1, -1, -1', '14, 26, 149, -1, -1, -1', '14, 30, 152, -1, -1, -1', '14, 31, 153, -1, -1, -1', '14, 32, 154, -1, -1, -1', '14, 33, 155, -1, -1, -1', '14, 34, 155, -1, -1, -1', '14, 35, 154, -1, -1, -1', '14, 36, 154, -1, -1, -1', '14, 37, 153, -1, -1, -1', '14, 38, 153, -1, -1, -1', '14, 39, 152, -1, -1, -1', '14, 47, 148, -1, -1, -1', '14, 48, 148, -1, -1, -1', '14, 49, 148, -1, -1, -1', '14, 50, 148, -1, -1, -1', '15, 9, 147, -1, -1, -1', '15, 10, 146, -1, -1, -1', '15, 11, 147, -1, -1, -1', '15, 12, 147, -1, -1, -1', '15, 13, 146, -1, -1, -1', '15, 14, 147, -1, -1, -1', '15, 15, 147, -1, -1, -1', '15, 16, 147, -1, -1, -1', '15, 17, 146, -1, -1, -1', '15, 23, 149, -1, -1, -1', '15, 24, 149, -1, -1, -1', '15, 25, 150, -1, -1, -1', '15, 26, 149, -1, -1, -1', '15, 30, 152, -1, -1, -1', '15, 31, 153, -1, -1, -1', '15, 32, 154, -1, -1, -1', '15, 33, 154, -1, -1, -1', '15, 34, 155, -1, -1, -1', '15, 35, 155, -1, -1, -1', '15, 36, 154, -1, -1, -1', '15, 37, 153, -1, -1, -1', '15, 38, 152, -1, -1, -1', '15, 39, 152, -1, -1, -1', '15, 57, 152, -1, -1, -1', '16, 9, 147, -1, -1, -1', '16, 10, 147, -1, -1, -1', '16, 11, 147, -1, -1, -1', '16, 12, 145, -1, -1, -1', '16, 13, 147, -1, -1, -1', '16, 14, 147, -1, -1, -1', '16, 15, 147, -1, -1, -1', '16, 23, 148, -1, -1, -1', '16, 24, 149, -1, -1, -1', '16, 25, 149, -1, -1, -1', '16, 26, 148, -1, -1, -1', '16, 30, 152, -1, -1, -1', '16, 31, 152, -1, -1, -1', '16, 32, 153, -1, -1, -1', '16, 33, 154, -1, -1, -1', '16, 34, 154, -1, -1, -1', '16, 35, 154, -1, -1, -1', '16, 36, 153, -1, -1, -1', '16, 37, 153, -1, -1, -1', '16, 38, 152, -1, -1, -1', '17, 9, 146, -1, -1, -1', '17, 10, 146, -1, -1, -1', '17, 11, 145, -1, -1, -1', '17, 12, 146, -1, -1, -1', '17, 13, 146, -1, -1, -1', '17, 14, 147, -1, -1, -1', '17, 15, 146, -1, -1, -1', '17, 30, 152, -1, -1, -1', '17, 31, 152, -1, -1, -1', '17, 32, 152, -1, -1, -1', '17, 33, 153, -1, -1, -1', '17, 34, 153, -1, -1, -1', '17, 35, 154, -1, -1, -1', '17, 36, 153, -1, -1, -1', '17, 37, 152, -1, -1, -1', '18, 9, 147, -1, -1, -1', '18, 10, 147, -1, -1, -1', '18, 11, 146, -1, -1, -1', '18, 12, 147, -1, -1, -1', '18, 13, 145, -1, -1, -1', '18, 14, 147, -1, -1, -1', '18, 15, 147, -1, -1, -1', '18, 31, 152, -1, -1, -1', '18, 32, 152, -1, -1, -1', '18, 33, 152, -1, -1, -1', '18, 34, 153, -1, -1, -1', '18, 35, 153, -1, -1, -1', '18, 36, 153, -1, -1, -1', '18, 37, 152, -1, -1, -1', '19, 10, 147, -1, -1, -1', '19, 11, 146, -1, -1, -1', '19, 12, 147, -1, -1, -1', '19, 13, 146, -1, -1, -1', '19, 14, 146, -1, -1, -1', '19, 15, 147, -1, -1, -1', '19, 32, 152, -1, -1, -1', '19, 33, 152, -1, -1, -1', '19, 34, 152, -1, -1, -1', '19, 35, 152, -1, -1, -1', '19, 36, 152, -1, -1, -1', '20, 11, 147, -1, -1, -1', '20, 12, 146, -1, -1, -1', '20, 13, 147, -1, -1, -1', '20, 14, 147, -1, -1, -1', '20, 33, 152, -1, -1, -1', '20, 34, 152, -1, -1, -1', '20, 35, 152, -1, -1, -1', '21, 12, 144, -1, -1, -1', '21, 13, 147, -1, -1, -1', '21, 14, 147, -1, -1, -1', '60, 5, 148, -1, -1, -1', '60, 6, 148, -1, -1, -1', '61, 5, 148, -1, -1, -1', '61, 6, 150, -1, -1, -1', '61, 7, 148, -1, -1, -1', '62, 1, 148, -1, -1, -1', '62, 2, 148, -1, -1, -1', '62, 5, 148, -1, -1, -1', '62, 6, 150, -1, -1, -1', '62, 7, 150, -1, -1, -1', '62, 8, 148, -1, -1, -1', '63, 1, 148, -1, -1, -1', '63, 2, 148, -1, -1, -1', '63, 3, 148, -1, -1, -1', '63, 4, 149, -1, -1, -1', '63, 5, 150, -1, -1, -1', '63, 6, 150, -1, -1, -1', '63, 7, 149, -1, -1, -1', '63, 8, 148, -1, -1, -1', '64, 3, 149, -1, -1, -1', '64, 4, 150, -1, -1, -1', '64, 5, 149, -1, -1, -1', '64, 6, 148, -1, -1, -1', '65, 3, 148, -1, -1, -1', '65, 4, 150, -1, -1, -1', '65, 5, 149, -1, -1, -1', '65, 6, 148, -1, -1, -1', '66, 4, 148, -1, -1, -1', '66, 5, 149, -1, -1, -1', '66, 6, 148, -1, -1, -1', '68, 12, 152, -1, -1, -1', '68, 13, 152, -1, -1, -1', '68, 14, 152, -1, -1, -1', '68, 15, 152, -1, -1, -1', '69, 11, 152, -1, -1, -1', '69, 12, 152, -1, -1, -1', '69, 13, 153, -1, -1, -1', '69, 14, 152, -1, -1, -1', '69, 15, 152, -1, -1, -1', '70, 8, 151, -1, -1, -1', '70, 12, 153, -1, -1, -1', '70, 13, 153, -1, -1, -1', '70, 14, 154, -1, -1, -1', '70, 15, 153, -1, -1, -1', '70, 16, 152, -1, -1, -1', '71, 7, 151, -1, -1, -1', '71, 8, 151, -1, -1, -1', '71, 9, 151, -1, -1, -1', '71, 10, 151, -1, -1, -1', '71, 12, 152, -1, -1, -1', '71, 13, 153, -1, -1, -1', '71, 14, 154, -1, -1, -1', '71, 15, 154, -1, -1, -1', '71, 16, 153, -1, -1, -1', '71, 17, 152, -1, -1, -1', '72, 7, 151, -1, -1, -1', '72, 8, 151, -1, -1, -1', '72, 9, 151, -1, -1, -1', '72, 10, 151, -1, -1, -1', '72, 12, 152, -1, -1, -1', '72, 13, 153, -1, -1, -1', '72, 14, 154, -1, -1, -1', '72, 15, 154, -1, -1, -1', '72, 16, 153, -1, -1, -1', '72, 17, 152, -1, -1, -1', '73, 6, 151, -1, -1, -1', '73, 7, 151, -1, -1, -1', '73, 8, 151, -1, -1, -1', '73, 9, 151, -1, -1, -1', '73, 10, 151, -1, -1, -1', '73, 12, 152, -1, -1, -1', '73, 13, 153, -1, -1, -1', '73, 14, 154, -1, -1, -1', '73, 15, 154, -1, -1, -1', '73, 16, 154, -1, -1, -1', '73, 17, 154, -1, -1, -1', '73, 18, 152, -1, -1, -1', '74, 5, 151, -1, -1, -1', '74, 6, 151, -1, -1, -1', '74, 7, 151, -1, -1, -1', '74, 8, 151, -1, -1, -1', '74, 12, 152, -1, -1, -1', '74, 13, 153, -1, -1, -1', '74, 14, 154, -1, -1, -1', '74, 15, 154, -1, -1, -1', '74, 16, 154, -1, -1, -1', '74, 17, 153, -1, -1, -1', '74, 18, 153, -1, -1, -1', '74, 19, 152, -1, -1, -1', '75, 5, 151, -1, -1, -1', '75, 6, 151, -1, -1, -1', '75, 7, 151, -1, -1, -1', '75, 8, 151, -1, -1, -1', '75, 10, 152, -1, -1, -1', '75, 11, 152, -1, -1, -1', '75, 12, 152, -1, -1, -1', '75, 13, 153, -1, -1, -1', '75, 14, 155, -1, -1, -1', '75, 15, 155, -1, -1, -1', '75, 16, 154, -1, -1, -1', '75, 17, 154, -1, -1, -1', '75, 18, 153, -1, -1, -1', '75, 19, 152, -1, -1, -1', '76, 5, 151, -1, -1, -1', '76, 6, 151, -1, -1, -1', '76, 7, 151, -1, -1, -1', '76, 8, 151, -1, -1, -1', '76, 11, 152, -1, -1, -1', '76, 12, 153, -1, -1, -1', '76, 13, 153, -1, -1, -1', '76, 14, 154, -1, -1, -1', '76, 15, 154, -1, -1, -1', '76, 16, 154, -1, -1, -1', '76, 17, 154, -1, -1, -1', '76, 18, 153, -1, -1, -1', '76, 19, 152, -1, -1, -1', '77, 4, 151, -1, -1, -1', '77, 5, 151, -1, -1, -1', '77, 6, 151, -1, -1, -1', '77, 7, 151, -1, -1, -1', '77, 8, 151, -1, -1, -1', '77, 9, 151, -1, -1, -1', '77, 11, 152, -1, -1, -1', '77, 12, 153, -1, -1, -1', '77, 13, 154, -1, -1, -1', '77, 14, 154, -1, -1, -1', '77, 15, 155, -1, -1, -1', '77, 16, 154, -1, -1, -1', '77, 17, 153, -1, -1, -1', '77, 18, 153, -1, -1, -1', '77, 19, 152, -1, -1, -1', '78, 1, 151, -1, -1, -1', '78, 2, 151, -1, -1, -1', '78, 3, 151, -1, -1, -1', '78, 4, 151, -1, -1, -1', '78, 5, 151, -1, -1, -1', '78, 6, 151, -1, -1, -1', '78, 7, 151, -1, -1, -1', '78, 8, 151, -1, -1, -1', '78, 9, 151, -1, -1, -1', '78, 11, 152, -1, -1, -1', '78, 12, 154, -1, -1, -1', '78, 13, 154, -1, -1, -1', '78, 14, 155, -1, -1, -1', '78, 15, 155, -1, -1, -1', '78, 16, 154, -1, -1, -1', '78, 17, 153, -1, -1, -1', '78, 18, 152, -1, -1, -1', '79, 1, 151, -1, -1, -1', '79, 2, 151, -1, -1, -1', '79, 3, 151, -1, -1, -1', '79, 4, 151, -1, -1, -1', '79, 5, 151, -1, -1, -1', '79, 8, 151, -1, -1, -1', '79, 9, 151, -1, -1, -1', '79, 11, 152, -1, -1, -1', '79, 12, 154, -1, -1, -1', '79, 13, 154, -1, -1, -1', '79, 14, 155, -1, -1, -1', '79, 15, 155, -1, -1, -1', '79, 16, 153, -1, -1, -1', '79, 17, 152, -1, -1, -1', '80, 1, 151, -1, -1, -1', '80, 2, 151, -1, -1, -1', '80, 3, 151, -1, -1, -1', '80, 4, 151, -1, -1, -1', '80, 5, 151, -1, -1, -1', '80, 9, 151, -1, -1, -1', '80, 11, 153, -1, -1, -1', '80, 12, 154, -1, -1, -1', '80, 13, 155, -1, -1, -1', '80, 14, 155, -1, -1, -1', '80, 15, 154, -1, -1, -1', '80, 16, 153, -1, -1, -1', '80, 17, 152, -1, -1, -1', '81, 1, 151, -1, -1, -1', '81, 2, 151, -1, -1, -1', '81, 3, 151, -1, -1, -1', '81, 4, 151, -1, -1, -1', '81, 5, 151, -1, -1, -1', '81, 7, 152, -1, -1, -1', '81, 11, 152, -1, -1, -1', '81, 12, 154, -1, -1, -1', '81, 13, 155, -1, -1, -1', '81, 14, 154, -1, -1, -1', '81, 15, 154, -1, -1, -1', '81, 16, 153, -1, -1, -1', '81, 17, 152, -1, -1, -1', '82, 1, 151, -1, -1, -1', '82, 2, 151, -1, -1, -1', '82, 3, 151, -1, -1, -1', '82, 4, 151, -1, -1, -1', '82, 5, 151, -1, -1, -1', '82, 7, 152, -1, -1, -1', '82, 8, 152, -1, -1, -1', '82, 9, 152, -1, -1, -1', '82, 10, 152, -1, -1, -1', '82, 11, 153, -1, -1, -1', '82, 12, 154, -1, -1, -1', '82, 13, 155, -1, -1, -1', '82, 14, 154, -1, -1, -1', '82, 15, 153, -1, -1, -1', '82, 16, 152, -1, -1, -1', '82, 17, 152, -1, -1, -1', '83, 1, 151, -1, -1, -1', '83, 2, 151, -1, -1, -1', '83, 3, 151, -1, -1, -1', '83, 7, 152, -1, -1, -1', '83, 8, 152, -1, -1, -1', '83, 9, 153, -1, -1, -1', '83, 10, 153, -1, -1, -1', '83, 11, 153, -1, -1, -1', '83, 12, 154, -1, -1, -1', '83, 13, 154, -1, -1, -1', '83, 14, 153, -1, -1, -1', '83, 15, 153, -1, -1, -1', '83, 16, 152, -1, -1, -1', '84, 2, 151, -1, -1, -1', '84, 6, 152, -1, -1, -1', '84, 7, 153, -1, -1, -1', '84, 8, 153, -1, -1, -1', '84, 9, 153, -1, -1, -1', '84, 10, 155, -1, -1, -1', '84, 11, 154, -1, -1, -1', '84, 12, 154, -1, -1, -1', '84, 13, 153, -1, -1, -1', '84, 14, 153, -1, -1, -1', '84, 15, 152, -1, -1, -1', '85, 4, 152, -1, -1, -1', '85, 5, 152, -1, -1, -1', '85, 6, 152, -1, -1, -1', '85, 7, 153, -1, -1, -1', '85, 8, 153, -1, -1, -1', '85, 9, 154, -1, -1, -1', '85, 10, 155, -1, -1, -1', '85, 11, 153, -1, -1, -1', '85, 12, 153, -1, -1, -1', '85, 13, 153, -1, -1, -1', '85, 14, 152, -1, -1, -1', '86, 1, 152, -1, -1, -1', '86, 2, 152, -1, -1, -1', '86, 3, 152, -1, -1, -1', '86, 4, 153, -1, -1, -1', '86, 5, 153, -1, -1, -1', '86, 6, 153, -1, -1, -1', '86, 7, 154, -1, -1, -1', '86, 8, 154, -1, -1, -1', '86, 9, 153, -1, -1, -1', '86, 10, 153, -1, -1, -1', '86, 11, 153, -1, -1, -1', '86, 12, 152, -1, -1, -1', '86, 13, 152, -1, -1, -1', '87, 1, 153, -1, -1, -1', '87, 2, 153, -1, -1, -1', '87, 3, 153, -1, -1, -1', '87, 4, 153, -1, -1, -1', '87, 5, 154, -1, -1, -1', '87, 6, 154, -1, -1, -1', '87, 7, 154, -1, -1, -1', '87, 8, 153, -1, -1, -1', '87, 9, 153, -1, -1, -1', '87, 10, 152, -1, -1, -1', '87, 11, 152, -1, -1, -1', '88, 1, 155, -1, -1, -1', '88, 2, 154, -1, -1, -1', '88, 3, 154, -1, -1, -1', '88, 4, 154, -1, -1, -1', '88, 5, 155, -1, -1, -1', '88, 6, 154, -1, -1, -1', '88, 7, 153, -1, -1, -1', '88, 8, 153, -1, -1, -1', '88, 9, 152, -1, -1, -1', '89, 1, 155, -1, -1, -1', '89, 2, 154, -1, -1, -1', '89, 3, 154, -1, -1, -1', '89, 4, 155, -1, -1, -1', '89, 5, 155, -1, -1, -1', '89, 6, 154, -1, -1, -1', '89, 7, 153, -1, -1, -1', '89, 8, 153, -1, -1, -1', '89, 9, 152, -1, -1, -1', '90, 1, 155, -1, -1, -1', '90, 2, 154, -1, -1, -1', '90, 3, 154, -1, -1, -1', '90, 4, 155, -1, -1, -1', '90, 5, 155, -1, -1, -1', '90, 6, 154, -1, -1, -1', '90, 7, 153, -1, -1, -1', '90, 8, 153, -1, -1, -1', '90, 9, 152, -1, -1, -1', '91, 1, 155, -1, -1, -1', '91, 2, 155, -1, -1, -1', '91, 3, 155, -1, -1, -1', '91, 4, 155, -1, -1, -1', '91, 5, 155, -1, -1, -1', '91, 6, 155, -1, -1, -1', '91, 7, 154, -1, -1, -1', '91, 8, 153, -1, -1, -1', '91, 9, 153, -1, -1, -1', '91, 10, 152, -1, -1, -1', '92, 1, 155, -1, -1, -1', '92, 2, 155, -1, -1, -1', '92, 3, 155, -1, -1, -1', '92, 4, 155, -1, -1, -1', '92, 5, 155, -1, -1, -1', '92, 6, 155, -1, -1, -1', '92, 7, 154, -1, -1, -1', '92, 8, 154, -1, -1, -1', '92, 9, 153, -1, -1, -1', '92, 10, 152, -1, -1, -1', '92, 11, 152, -1, -1, -1', '93, 1, 155, -1, -1, -1', '93, 2, 155, -1, -1, -1', '93, 3, 155, -1, -1, -1', '93, 4, 155, -1, -1, -1', '93, 5, 155, -1, -1, -1', '93, 6, 154, -1, -1, -1', '93, 7, 154, -1, -1, -1', '93, 8, 154, -1, -1, -1', '93, 9, 154, -1, -1, -1', '93, 10, 153, -1, -1, -1', '93, 11, 152, -1, -1, -1', '94, 1, 155, -1, -1, -1', '94, 2, 155, -1, -1, -1', '94, 3, 155, -1, -1, -1', '94, 4, 155, -1, -1, -1', '94, 5, 155, -1, -1, -1', '94, 6, 154, -1, -1, -1', '94, 7, 154, -1, -1, -1', '94, 8, 155, -1, -1, -1', '94, 9, 154, -1, -1, -1', '94, 10, 153, -1, -1, -1', '94, 11, 153, -1, -1, -1', '95, 1, 154, -1, -1, -1', '95, 2, 154, -1, -1, -1', '95, 3, 154, -1, -1, -1', '95, 4, 154, -1, -1, -1', '95, 5, 154, -1, -1, -1', '95, 6, 155, -1, -1, -1', '95, 7, 155, -1, -1, -1', '95, 8, 155, -1, -1, -1', '95, 9, 154, -1, -1, -1', '95, 10, 153, -1, -1, -1', '95, 11, 153, -1, -1, -1', '96, 1, 153, -1, -1, -1', '96, 2, 153, -1, -1, -1', '96, 3, 153, -1, -1, -1', '96, 4, 153, -1, -1, -1', '96, 5, 154, -1, -1, -1', '96, 6, 154, -1, -1, -1', '96, 7, 154, -1, -1, -1', '96, 8, 154, -1, -1, -1', '96, 9, 153, -1, -1, -1', '96, 10, 153, -1, -1, -1', '96, 11, 152, -1, -1, -1', '97, 1, 153, -1, -1, -1', '97, 2, 152, -1, -1, -1', '97, 3, 152, -1, -1, -1', '97, 4, 152, -1, -1, -1', '97, 5, 153, -1, -1, -1', '97, 6, 153, -1, -1, -1', '97, 7, 153, -1, -1, -1', '97, 8, 153, -1, -1, -1', '97, 9, 153, -1, -1, -1', '97, 10, 152, -1, -1, -1', '97, 11, 152, -1, -1, -1', '97, 12, 152, -1, -1, -1', '98, 1, 152, -1, -1, -1', '98, 6, 152, -1, -1, -1', '98, 7, 153, -1, -1, -1', '98, 8, 152, -1, -1, -1', '98, 9, 152, -1, -1, -1', '99, 3, 147, -1, -1, -1', '99, 4, 144, -1, -1, -1', '99, 6, 152, -1, -1, -1', '99, 7, 152, -1, -1, -1', '99, 8, 152, -1, -1, -1', '100, 1, 144, -1, -1, -1', '100, 2, 146, -1, -1, -1', '100, 3, 147, -1, -1, -1', '100, 4, 146, -1, -1, -1', '101, 1, 147, -1, -1, -1', '101, 2, 146, -1, -1, -1', '101, 3, 147, -1, -1, -1', '101, 4, 147, -1, -1, -1', '101, 5, 145, -1, -1, -1', '101, 6, 146, -1, -1, -1', '102, 1, 146, -1, -1, -1', '102, 2, 146, -1, -1, -1', '102, 3, 144, -1, -1, -1', '102, 4, 147, -1, -1, -1', '102, 5, 146, -1, -1, -1', '102, 6, 144, -1, -1, -1', '102, 7, 146, -1, -1, -1', '103, 1, 146, -1, -1, -1', '103, 2, 146, -1, -1, -1', '103, 3, 147, -1, -1, -1', '103, 4, 147, -1, -1, -1', '103, 5, 147, -1, -1, -1', '103, 6, 146, -1, -1, -1', '103, 7, 147, -1, -1, -1', '103, 8, 146, -1, -1, -1', '104, 1, 145, -1, -1, -1', '104, 2, 146, -1, -1, -1', '104, 3, 146, -1, -1, -1', '104, 4, 147, -1, -1, -1', '104, 5, 144, -1, -1, -1', '104, 6, 146, -1, -1, -1', '104, 7, 146, -1, -1, -1', '104, 8, 146, -1, -1, -1', '105, 1, 145, -1, -1, -1', '105, 2, 144, -1, -1, -1', '105, 3, 147, -1, -1, -1', '105, 4, 147, -1, -1, -1', '105, 5, 147, -1, -1, -1', '105, 6, 147, -1, -1, -1', '105, 7, 147, -1, -1, -1', '105, 8, 147, -1, -1, -1', '106, 1, 147, -1, -1, -1', '106, 2, 146, -1, -1, -1', '106, 3, 146, -1, -1, -1', '106, 4, 146, -1, -1, -1', '106, 5, 145, -1, -1, -1', '107, 1, 147, -1, -1, -1', '107, 2, 147, -1, -1, -1', '107, 3, 147, -1, -1, -1', '107, 4, 145, -1, -1, -1', '107, 23, 144, -1, -1, -1', '107, 24, 144, -1, -1, -1', '108, 2, 146, -1, -1, -1', '108, 3, 147, -1, -1, -1', '108, 4, 147, -1, -1, -1', '108, 22, 144, -1, -1, -1', '108, 23, 146, -1, -1, -1', '108, 24, 144, -1, -1, -1', '109, 3, 146, -1, -1, -1', '109, 4, 146, -1, -1, -1', '109, 21, 144, -1, -1, -1', '109, 22, 146, -1, -1, -1', '109, 23, 144, -1, -1, -1', '110, 21, 145, -1, -1, -1', '110, 22, 145, -1, -1, -1', '111, 20, 144, -1, -1, -1', '111, 21, 146, -1, -1, -1', '111, 22, 144, -1, -1, -1', '112, 18, 144, -1, -1, -1', '112, 19, 145, -1, -1, -1', '112, 20, 146, -1, -1, -1', '112, 21, 144, -1, -1, -1', '113, 18, 145, -1, -1, -1', '113, 19, 146, -1, -1, -1', '113, 20, 144, -1, -1, -1', '114, 18, 145, -1, -1, -1', '114, 19, 145, -1, -1, -1', '115, 18, 144, -1, -1, -1', '115, 19, 144, -1, -1, -1', '134, 21, 151, -1, -1, -1', '135, 21, 151, -1, -1, -1', '135, 22, 151, -1, -1, -1', '136, 17, 151, -1, -1, -1', '136, 18, 151, -1, -1, -1', '136, 19, 151, -1, -1, -1', '136, 20, 151, -1, -1, -1', '136, 21, 151, -1, -1, -1', '136, 22, 151, -1, -1, -1', '137, 17, 151, -1, -1, -1', '137, 18, 151, -1, -1, -1', '137, 19, 151, -1, -1, -1', '137, 20, 151, -1, -1, -1', '137, 21, 151, -1, -1, -1', '137, 22, 151, -1, -1, -1', '138, 17, 151, -1, -1, -1', '138, 18, 151, -1, -1, -1', '138, 19, 151, -1, -1, -1', '138, 20, 151, -1, -1, -1', '138, 21, 150, -1, -1, -1', '138, 22, 151, -1, -1, -1', '139, 18, 151, -1, -1, -1', '139, 19, 151, -1, -1, -1', '139, 20, 151, -1, -1, -1', '139, 21, 151, -1, -1, -1', '139, 22, 148, -1, -1, -1', '139, 23, 151, -1, -1, -1', '139, 24, 151, -1, -1, -1', '140, 18, 151, -1, -1, -1', '140, 19, 151, -1, -1, -1', '140, 20, 151, -1, -1, -1', '140, 21, 151, -1, -1, -1', '140, 22, 151, -1, -1, -1', '140, 23, 151, -1, -1, -1', '140, 24, 151, -1, -1, -1', '140, 25, 151, -1, -1, -1', '141, 16, 151, -1, -1, -1', '141, 17, 151, -1, -1, -1', '141, 18, 151, -1, -1, -1', '141, 19, 151, -1, -1, -1', '141, 20, 151, -1, -1, -1', '141, 21, 151, -1, -1, -1', '141, 22, 151, -1, -1, -1', '141, 23, 151, -1, -1, -1', '141, 24, 151, -1, -1, -1', '141, 25, 151, -1, -1, -1', '142, 16, 151, -1, -1, -1', '142, 17, 151, -1, -1, -1', '142, 18, 151, -1, -1, -1', '142, 19, 151, -1, -1, -1', '142, 20, 151, -1, -1, -1', '142, 21, 150, -1, -1, -1', '142, 22, 151, -1, -1, -1', '142, 23, 151, -1, -1, -1', '142, 24, 151, -1, -1, -1', '142, 25, 150, -1, -1, -1', '143, 15, 151, -1, -1, -1', '143, 16, 151, -1, -1, -1', '143, 17, 151, -1, -1, -1', '143, 18, 151, -1, -1, -1', '143, 19, 151, -1, -1, -1', '143, 20, 151, -1, -1, -1', '143, 21, 150, -1, -1, -1', '143, 22, 151, -1, -1, -1', '143, 23, 151, -1, -1, -1', '143, 24, 150, -1, -1, -1', '143, 25, 151, -1, -1, -1', '144, 18, 151, -1, -1, -1', '144, 19, 150, -1, -1, -1', '144, 20, 150, -1, -1, -1', '144, 21, 151, -1, -1, -1', '144, 22, 151, -1, -1, -1', '144, 23, 148, -1, -1, -1', '144, 24, 151, -1, -1, -1', '144, 25, 151, -1, -1, -1', '144, 26, 151, -1, -1, -1', '144, 27, 151, -1, -1, -1', '144, 28, 151, -1, -1, -1', '145, 19, 150, -1, -1, -1', '145, 20, 150, -1, -1, -1', '145, 21, 149, -1, -1, -1', '145, 22, 151, -1, -1, -1', '145, 23, 149, -1, -1, -1', '145, 24, 149, -1, -1, -1', '145, 25, 148, -1, -1, -1', '145, 26, 151, -1, -1, -1', '57, 82, 152, -1, -1, -1', '57, 83, 152, -1, -1, -1', '57, 84, 152, -1, -1, -1', '57, 85, 152, -1, -1, -1', '57, 86, 152, -1, -1, -1', '57, 87, 152, -1, -1, -1', '57, 88, 152, -1, -1, -1', '58, 80, 152, -1, -1, -1', '58, 81, 152, -1, -1, -1', '58, 82, 152, -1, -1, -1', '58, 83, 153, -1, -1, -1', '58, 84, 153, -1, -1, -1', '58, 85, 153, -1, -1, -1', '58, 86, 152, -1, -1, -1', '58, 87, 152, -1, -1, -1', '58, 88, 152, -1, -1, -1', '59, 79, 152, -1, -1, -1', '59, 80, 152, -1, -1, -1', '59, 81, 152, -1, -1, -1', '59, 82, 153, -1, -1, -1', '59, 83, 153, -1, -1, -1', '59, 84, 153, -1, -1, -1', '59, 85, 153, -1, -1, -1', '59, 86, 152, -1, -1, -1', '59, 87, 152, -1, -1, -1', '59, 88, 152, -1, -1, -1', '60, 77, 152, -1, -1, -1', '60, 78, 152, -1, -1, -1', '60, 79, 152, -1, -1, -1', '60, 80, 153, -1, -1, -1', '60, 81, 153, -1, -1, -1', '60, 82, 153, -1, -1, -1', '60, 83, 154, -1, -1, -1', '60, 84, 154, -1, -1, -1', '60, 85, 153, -1, -1, -1', '60, 86, 152, -1, -1, -1', '60, 87, 152, -1, -1, -1', '60, 88, 152, -1, -1, -1', '61, 76, 152, -1, -1, -1', '61, 77, 152, -1, -1, -1', '61, 78, 153, -1, -1, -1', '61, 79, 153, -1, -1, -1', '61, 80, 153, -1, -1, -1', '61, 81, 153, -1, -1, -1', '61, 82, 154, -1, -1, -1', '61, 83, 154, -1, -1, -1', '61, 84, 154, -1, -1, -1', '61, 85, 153, -1, -1, -1', '61, 86, 152, -1, -1, -1', '61, 87, 152, -1, -1, -1', '61, 88, 152, -1, -1, -1', '62, 76, 152, -1, -1, -1', '62, 77, 152, -1, -1, -1', '62, 78, 153, -1, -1, -1', '62, 79, 153, -1, -1, -1', '62, 80, 155, -1, -1, -1', '62, 81, 154, -1, -1, -1', '62, 82, 155, -1, -1, -1', '62, 83, 155, -1, -1, -1', '62, 84, 154, -1, -1, -1', '62, 85, 154, -1, -1, -1', '62, 86, 153, -1, -1, -1', '62, 87, 152, -1, -1, -1', '62, 88, 152, -1, -1, -1', '63, 72, 144, -1, -1, -1', '63, 73, 145, -1, -1, -1', '63, 77, 152, -1, -1, -1', '63, 78, 152, -1, -1, -1', '63, 79, 153, -1, -1, -1', '63, 80, 153, -1, -1, -1', '63, 81, 154, -1, -1, -1', '63, 82, 154, -1, -1, -1', '63, 83, 154, -1, -1, -1', '63, 84, 155, -1, -1, -1', '63, 85, 154, -1, -1, -1', '63, 86, 153, -1, -1, -1', '63, 87, 152, -1, -1, -1', '63, 88, 152, -1, -1, -1', '64, 72, 145, -1, -1, -1', '64, 73, 147, -1, -1, -1', '64, 78, 152, -1, -1, -1', '64, 79, 152, -1, -1, -1', '64, 80, 152, -1, -1, -1', '64, 81, 153, -1, -1, -1', '64, 82, 153, -1, -1, -1', '64, 83, 154, -1, -1, -1', '64, 84, 154, -1, -1, -1', '64, 85, 154, -1, -1, -1', '64, 86, 154, -1, -1, -1', '64, 87, 153, -1, -1, -1', '64, 88, 152, -1, -1, -1', '64, 89, 152, -1, -1, -1', '65, 72, 145, -1, -1, -1', '65, 73, 147, -1, -1, -1', '65, 74, 147, -1, -1, -1', '65, 80, 152, -1, -1, -1', '65, 81, 152, -1, -1, -1', '65, 82, 153, -1, -1, -1', '65, 83, 153, -1, -1, -1', '65, 84, 153, -1, -1, -1', '65, 85, 154, -1, -1, -1', '65, 86, 154, -1, -1, -1', '65, 87, 153, -1, -1, -1', '65, 88, 152, -1, -1, -1', '65, 89, 152, -1, -1, -1', '66, 72, 145, -1, -1, -1', '66, 73, 147, -1, -1, -1', '66, 74, 147, -1, -1, -1', '66, 75, 147, -1, -1, -1', '66, 82, 152, -1, -1, -1', '66, 83, 152, -1, -1, -1', '66, 84, 152, -1, -1, -1', '66, 85, 153, -1, -1, -1', '66, 86, 153, -1, -1, -1', '66, 87, 153, -1, -1, -1', '66, 88, 152, -1, -1, -1', '66, 89, 152, -1, -1, -1', '67, 67, 152, -1, -1, -1', '67, 68, 152, -1, -1, -1', '67, 69, 152, -1, -1, -1', '67, 72, 144, -1, -1, -1', '67, 73, 145, -1, -1, -1', '67, 74, 146, -1, -1, -1', '67, 75, 147, -1, -1, -1', '67, 76, 147, -1, -1, -1', '67, 77, 145, -1, -1, -1', '67, 83, 152, -1, -1, -1', '67, 84, 152, -1, -1, -1', '67, 85, 152, -1, -1, -1', '67, 86, 152, -1, -1, -1', '67, 87, 152, -1, -1, -1', '67, 88, 152, -1, -1, -1', '67, 89, 152, -1, -1, -1', '68, 67, 152, -1, -1, -1', '68, 68, 153, -1, -1, -1', '68, 69, 152, -1, -1, -1', '68, 70, 152, -1, -1, -1', '68, 74, 144, -1, -1, -1', '68, 75, 146, -1, -1, -1', '68, 76, 147, -1, -1, -1', '68, 77, 146, -1, -1, -1', '68, 78, 145, -1, -1, -1', '68, 79, 144, -1, -1, -1', '68, 84, 152, -1, -1, -1', '68, 85, 152, -1, -1, -1', '68, 86, 152, -1, -1, -1', '68, 87, 152, -1, -1, -1', '68, 88, 152, -1, -1, -1', '69, 67, 152, -1, -1, -1', '69, 68, 153, -1, -1, -1', '69, 69, 153, -1, -1, -1', '69, 70, 152, -1, -1, -1', '69, 71, 152, -1, -1, -1', '69, 74, 144, -1, -1, -1', '69, 75, 146, -1, -1, -1', '69, 76, 147, -1, -1, -1', '69, 77, 147, -1, -1, -1', '69, 78, 147, -1, -1, -1', '69, 79, 145, -1, -1, -1', '70, 66, 152, -1, -1, -1', '70, 67, 152, -1, -1, -1', '70, 68, 153, -1, -1, -1', '70, 69, 153, -1, -1, -1', '70, 70, 152, -1, -1, -1', '70, 71, 152, -1, -1, -1', '70, 74, 145, -1, -1, -1', '70, 75, 147, -1, -1, -1', '70, 76, 147, -1, -1, -1', '70, 77, 147, -1, -1, -1', '70, 78, 146, -1, -1, -1', '70, 79, 144, -1, -1, -1', '71, 66, 152, -1, -1, -1', '71, 67, 153, -1, -1, -1', '71, 68, 153, -1, -1, -1', '71, 69, 153, -1, -1, -1', '71, 70, 152, -1, -1, -1', '71, 71, 152, -1, -1, -1', '71, 74, 145, -1, -1, -1', '71, 75, 147, -1, -1, -1', '71, 76, 147, -1, -1, -1', '71, 77, 147, -1, -1, -1', '71, 78, 145, -1, -1, -1', '71, 111, 150, -1, -1, -1', '72, 66, 152, -1, -1, -1', '72, 67, 153, -1, -1, -1', '72, 68, 154, -1, -1, -1', '72, 69, 153, -1, -1, -1', '72, 70, 153, -1, -1, -1', '72, 74, 145, -1, -1, -1', '72, 75, 147, -1, -1, -1', '72, 76, 147, -1, -1, -1', '72, 77, 147, -1, -1, -1', '72, 78, 145, -1, -1, -1', '72, 110, 150, -1, -1, -1', '72, 111, 149, -1, -1, -1', '72, 112, 151, -1, -1, -1', '73, 65, 152, -1, -1, -1', '73, 66, 153, -1, -1, -1', '73, 67, 153, -1, -1, -1', '73, 68, 154, -1, -1, -1', '73, 69, 154, -1, -1, -1', '73, 70, 153, -1, -1, -1', '73, 74, 145, -1, -1, -1', '73, 75, 147, -1, -1, -1', '73, 76, 147, -1, -1, -1', '73, 77, 146, -1, -1, -1', '73, 78, 144, -1, -1, -1', '73, 110, 149, -1, -1, -1', '73, 111, 151, -1, -1, -1', '73, 112, 151, -1, -1, -1', '73, 113, 150, -1, -1, -1', '74, 64, 152, -1, -1, -1', '74, 65, 152, -1, -1, -1', '74, 66, 153, -1, -1, -1', '74, 67, 154, -1, -1, -1', '74, 68, 154, -1, -1, -1', '74, 69, 154, -1, -1, -1', '74, 70, 153, -1, -1, -1', '74, 71, 152, -1, -1, -1', '74, 74, 144, -1, -1, -1', '74, 75, 146, -1, -1, -1', '74, 76, 147, -1, -1, -1', '74, 77, 145, -1, -1, -1', '74, 109, 151, -1, -1, -1', '74, 110, 151, -1, -1, -1', '74, 111, 151, -1, -1, -1', '74, 112, 151, -1, -1, -1', '74, 113, 151, -1, -1, -1', '74, 114, 151, -1, -1, -1', '75, 64, 152, -1, -1, -1', '75, 65, 152, -1, -1, -1', '75, 66, 153, -1, -1, -1', '75, 67, 153, -1, -1, -1', '75, 68, 154, -1, -1, -1', '75, 69, 154, -1, -1, -1', '75, 70, 153, -1, -1, -1', '75, 71, 152, -1, -1, -1', '75, 72, 152, -1, -1, -1', '75, 75, 144, -1, -1, -1', '75, 76, 145, -1, -1, -1', '75, 77, 144, -1, -1, -1', '75, 109, 151, -1, -1, -1', '75, 110, 151, -1, -1, -1', '75, 111, 151, -1, -1, -1', '75, 112, 151, -1, -1, -1', '75, 113, 151, -1, -1, -1', '75, 114, 151, -1, -1, -1', '75, 115, 151, -1, -1, -1', '76, 65, 152, -1, -1, -1', '76, 66, 152, -1, -1, -1', '76, 67, 153, -1, -1, -1', '76, 68, 154, -1, -1, -1', '76, 69, 154, -1, -1, -1', '76, 70, 153, -1, -1, -1', '76, 71, 152, -1, -1, -1', '76, 72, 152, -1, -1, -1', '76, 76, 144, -1, -1, -1', '76, 108, 151, -1, -1, -1', '76, 109, 151, -1, -1, -1', '76, 110, 151, -1, -1, -1', '76, 111, 151, -1, -1, -1', '76, 112, 151, -1, -1, -1', '76, 113, 149, -1, -1, -1', '76, 114, 150, -1, -1, -1', '76, 115, 151, -1, -1, -1', '77, 66, 152, -1, -1, -1', '77, 67, 153, -1, -1, -1', '77, 68, 153, -1, -1, -1', '77, 69, 153, -1, -1, -1', '77, 70, 153, -1, -1, -1', '77, 71, 153, -1, -1, -1', '77, 72, 152, -1, -1, -1', '77, 107, 151, -1, -1, -1', '77, 108, 151, -1, -1, -1', '77, 109, 151, -1, -1, -1', '77, 110, 151, -1, -1, -1', '77, 111, 150, -1, -1, -1', '77, 115, 151, -1, -1, -1', '78, 67, 152, -1, -1, -1', '78, 68, 153, -1, -1, -1', '78, 69, 153, -1, -1, -1', '78, 70, 153, -1, -1, -1', '78, 71, 152, -1, -1, -1', '78, 72, 152, -1, -1, -1', '78, 73, 152, -1, -1, -1', '78, 108, 150, -1, -1, -1', '78, 109, 151, -1, -1, -1', '78, 110, 151, -1, -1, -1', '78, 111, 151, -1, -1, -1', '78, 113, 152, -1, -1, -1', '79, 67, 152, -1, -1, -1', '79, 68, 152, -1, -1, -1', '79, 69, 152, -1, -1, -1', '79, 70, 152, -1, -1, -1', '79, 71, 152, -1, -1, -1', '79, 72, 152, -1, -1, -1', '79, 106, 152, -1, -1, -1', '79, 109, 151, -1, -1, -1', '79, 110, 150, -1, -1, -1', '79, 111, 150, -1, -1, -1', '79, 113, 152, -1, -1, -1', '79, 114, 152, -1, -1, -1', '80, 69, 152, -1, -1, -1', '80, 104, 152, -1, -1, -1', '80, 105, 152, -1, -1, -1', '80, 106, 152, -1, -1, -1', '80, 107, 152, -1, -1, -1', '80, 110, 150, -1, -1, -1', '80, 111, 150, -1, -1, -1', '80, 113, 152, -1, -1, -1', '80, 114, 152, -1, -1, -1', '80, 115, 152, -1, -1, -1', '81, 102, 152, -1, -1, -1', '81, 103, 152, -1, -1, -1', '81, 104, 153, -1, -1, -1', '81, 105, 153, -1, -1, -1', '81, 106, 153, -1, -1, -1', '81, 107, 153, -1, -1, -1', '81, 108, 152, -1, -1, -1', '81, 113, 152, -1, -1, -1', '81, 114, 153, -1, -1, -1', '81, 115, 152, -1, -1, -1', '82, 101, 152, -1, -1, -1', '82, 102, 153, -1, -1, -1', '82, 103, 153, -1, -1, -1', '82, 104, 153, -1, -1, -1', '82, 105, 154, -1, -1, -1', '82, 106, 154, -1, -1, -1', '82, 107, 153, -1, -1, -1', '82, 108, 153, -1, -1, -1', '82, 109, 152, -1, -1, -1', '82, 110, 152, -1, -1, -1', '82, 111, 152, -1, -1, -1', '82, 112, 153, -1, -1, -1', '82, 113, 152, -1, -1, -1', '82, 114, 153, -1, -1, -1', '82, 115, 153, -1, -1, -1', '82, 116, 152, -1, -1, -1', '82, 117, 152, -1, -1, -1', '83, 101, 152, -1, -1, -1', '83, 102, 153, -1, -1, -1', '83, 103, 153, -1, -1, -1', '83, 104, 153, -1, -1, -1', '83, 105, 154, -1, -1, -1', '83, 106, 154, -1, -1, -1', '83, 107, 154, -1, -1, -1', '83, 108, 153, -1, -1, -1', '83, 109, 153, -1, -1, -1', '83, 110, 154, -1, -1, -1', '83, 111, 153, -1, -1, -1', '83, 112, 153, -1, -1, -1', '83, 113, 153, -1, -1, -1', '83, 114, 153, -1, -1, -1', '83, 115, 153, -1, -1, -1', '83, 116, 153, -1, -1, -1', '83, 117, 152, -1, -1, -1', '84, 101, 153, -1, -1, -1', '84, 102, 152, -1, -1, -1', '84, 103, 152, -1, -1, -1', '84, 104, 153, -1, -1, -1', '84, 105, 153, -1, -1, -1', '84, 106, 154, -1, -1, -1', '84, 107, 154, -1, -1, -1', '84, 108, 154, -1, -1, -1', '84, 109, 154, -1, -1, -1', '84, 110, 154, -1, -1, -1', '84, 111, 154, -1, -1, -1', '84, 112, 154, -1, -1, -1', '84, 113, 154, -1, -1, -1', '84, 114, 154, -1, -1, -1', '84, 115, 154, -1, -1, -1', '84, 116, 153, -1, -1, -1', '84, 117, 152, -1, -1, -1', '85, 104, 152, -1, -1, -1', '85, 105, 153, -1, -1, -1', '85, 106, 153, -1, -1, -1', '85, 107, 154, -1, -1, -1', '85, 108, 155, -1, -1, -1', '85, 109, 154, -1, -1, -1', '85, 110, 154, -1, -1, -1', '85, 111, 154, -1, -1, -1', '85, 112, 154, -1, -1, -1', '85, 113, 154, -1, -1, -1', '85, 114, 154, -1, -1, -1', '85, 115, 154, -1, -1, -1', '85, 116, 153, -1, -1, -1', '85, 117, 152, -1, -1, -1', '86, 104, 152, -1, -1, -1', '86, 105, 152, -1, -1, -1', '86, 106, 153, -1, -1, -1', '86, 107, 153, -1, -1, -1', '86, 108, 153, -1, -1, -1', '86, 109, 154, -1, -1, -1', '86, 110, 154, -1, -1, -1', '86, 111, 154, -1, -1, -1', '86, 112, 154, -1, -1, -1', '86, 113, 154, -1, -1, -1', '86, 114, 154, -1, -1, -1', '86, 115, 153, -1, -1, -1', '86, 116, 153, -1, -1, -1', '86, 117, 152, -1, -1, -1', '87, 106, 152, -1, -1, -1', '87, 107, 152, -1, -1, -1', '87, 108, 152, -1, -1, -1', '87, 109, 153, -1, -1, -1', '87, 110, 153, -1, -1, -1', '87, 111, 153, -1, -1, -1', '87, 112, 154, -1, -1, -1', '87, 113, 154, -1, -1, -1', '87, 114, 153, -1, -1, -1', '87, 115, 153, -1, -1, -1', '87, 116, 152, -1, -1, -1', '87, 117, 153, -1, -1, -1', '88, 108, 152, -1, -1, -1', '88, 109, 152, -1, -1, -1', '88, 110, 152, -1, -1, -1', '88, 111, 153, -1, -1, -1', '88, 112, 154, -1, -1, -1', '88, 113, 154, -1, -1, -1', '88, 114, 153, -1, -1, -1', '88, 115, 152, -1, -1, -1', '89, 110, 152, -1, -1, -1', '89, 111, 152, -1, -1, -1', '89, 112, 153, -1, -1, -1', '89, 113, 153, -1, -1, -1', '89, 114, 152, -1, -1, -1', '89, 115, 152, -1, -1, -1', '90, 111, 152, -1, -1, -1', '90, 112, 152, -1, -1, -1', '90, 113, 152, -1, -1, -1', '90, 114, 152, -1, -1, -1', '91, 111, 153, -1, -1, -1', '91, 114, 152, -1, -1, -1'], False, False);
end;


{$COMMAND sound: TurnSoundOnOff}


procedure TurnSoundOnOff(P, Value: Integer);
var
  aValue: Integer;
begin
  if not Utils.InRangeI(P, 0, 1) then
    Exit;
  aValue := Utils.EnsureRangeI(Value, 0, 1);
  SoundAllowed[P] := Boolean(aValue);
end;


function GroupsFormation(P, GT: Integer): Integer;
var
  aCount, aColumns: Integer;
begin
  States.AIGroupsFormationGet(P, GT, aCount, aColumns);
  Result := aCount;
end;


function DefenceSquadsCount(P, aGT: Integer): Integer;
var
  I, aX, aY: Integer;
  GT, DT: Byte; 
  R: Word;
begin
  Result := 0;
  if States.StatAIDefencePositionsCount(P) > 0 then
    for I := 0 to States.StatAIDefencePositionsCount(P) - 1 do
    begin
      States.AIDefencePositionGet(P, I, aX, aY, GT, R, DT);
      if (DT = 0)
      and (GT = aGT) then
        Result := Result + 1;
    end;
end;


function SoldiersForDefence(P: Integer): Integer;
var
  I: Integer;
begin
  Result := 0;
  for I := 0 to 3 do
    Result := Result + DefenceSquadsCount(P, I) * GroupsFormation(P, I);
end;


function AttackAmount(P: Integer): Integer;
begin
  case P of
    3,4,6,7: Result := 60
    else     Result := 0;
  end;
end;


function SoldiersToEquip(P: Integer): Integer;
begin
  Result := SoldiersForDefence(P) + AttackAmount(P) - States.StatArmyCount(P) - States.StatUnitTypeCount(P, 13) + States.StatHouseTypeCount(P, 17) + 5;
end;


function FirstAttackTimer(P: Integer): Integer;
begin
  case P of
    3,7: Result := 48000;
    4,6: Result := 39000;
  end;
end;


function AttackFrequency(P: Integer): Integer;
begin
  Result := AttackAmount(P) * States.AIEquipRate(P, 1);
end;


function AttackTime(P, ID: Integer): Integer;
begin
  Result := FirstAttackTimer(P) + AttackFrequency(P) * (ID - 1);
end;


procedure OnMissionStart;
var
  G, G1, G2, I: Integer;
  H: array of Integer;
begin
  FindWolves;
  ChangesCount := 0;
  for I := 0 to 1 do
    SoundAllowed[I] := True;
  Actions.ShowMsg(-1, '<$2>');
  BlockWares;
  SetWareDistribution;
  Actions.PlayWAVAtLocationLooped(-1, 'Waterfall Creek', 2.5, 32, 148, 17);
  Actions.PlayWAVAtLocationLooped(-1, 'Fall', 2.5, 32, 57, 10);
  Actions.PlayWAVAtLocationLooped(-1, 'Small Fall', 2.5, 32, 99, 145);
  Actions.PlayWAVAtLocationLooped(-1, 'Lava', 2.5, 32, 7, 74);
  Actions.PlayWAVAtLocationLooped(-1, 'Lava', 2.5, 32, 105, 100);
  Actions.PlayWAVAtLocationLooped(-1, 'Lava', 2.5, 32, 132, 73);
  Actions.PlayWAVAtLocationLooped(-1, 'Lava', 2.5, 32, 151, 55);
  Barracks := States.HouseAt(13, 61);
  AIGroup := States.GroupAt(10, 63);
  Msg := False;
  G := Actions.GiveGroup(2, 16, 74, 88, 6, 1, 1);
  for I := 0 to 5 + States.KaMRandomI(5) do
  begin
    G1 := Actions.GiveGroup(2, 14 + States.KaMRandomI(3), 75, 88, 6, 1, 1);
    Actions.GroupOrderLink(G1, G);
    Actions.GroupSetFormation(G, 4);
    Actions.GroupOrderWalk(G, 59, 94, 6);
    if States.PlayerEnabled(0) then
      H := States.PlayerGetAllHouses(0);
    if Length(H) > 0 then
      Store0 := H[Length(H) - 1];
    if States.PlayerEnabled(1) then
      H := States.PlayerGetAllHouses(1);
    if Length(H) > 0 then
      Store1 := H[Length(H) - 1];
  end;

  if States.MissionDifficulty = mdHard1 then
  begin
    if States.PlayerEnabled(0) then
    begin
      Actions.HouseTakeWaresFrom(Store0, 15, 5);
      for I := 0 to 12 do
        if States.HouseResourceAmount(Store0, I) > 10 then
          Actions.HouseTakeWaresFrom(Store0, I, 10);
    end;
    if States.PlayerEnabled(1) then
    begin
      Actions.HouseTakeWaresFrom(Store0, 15, 5);
      for I := 0 to 12 do
        if States.HouseResourceAmount(Store1, I) > 10 then
          Actions.HouseTakeWaresFrom(Store1, I, 10);
    end;
    Actions.AIRecruitDelay(2, 18000);
    Actions.GiveGroup(8, 22, 3, 38, 2, 9, 3);
    Actions.GiveGroup(8, 22, 25, 10, 4, 10, 5);
    Actions.GiveGroup(8, 22, 83, 28, 4, 12, 4);
    G2 := Actions.GiveGroup(2, 20, 69, 69, 2, 8 + States.KaMRandomI(3), 4);
    Actions.GroupOrderWalk(G2, 82, 62, 0);
    Actions.AIEquipRate(3, 0, 120);
    Actions.AIEquipRate(3, 1, 120);
    Actions.AIEquipRate(4, 0, 120);
    Actions.AIEquipRate(4, 1, 120);
    Actions.AIEquipRate(6, 0, 120);
    Actions.AIEquipRate(6, 1, 120);
    Actions.AIEquipRate(7, 0, 120);
    Actions.AIEquipRate(7, 1, 120);
    Actions.AIEquipRate(5, 0, 50);
    Actions.AIEquipRate(5, 1, 50);
  end;

  if States.MissionDifficulty = mdEasy1 then
  begin
    Actions.AIEquipRate(5, 0, 120);
    Actions.AIEquipRate(5, 1, 120);
    Actions.AIEquipRate(3, 0, 300);
    Actions.AIEquipRate(3, 1, 300);
    Actions.AIEquipRate(4, 0, 300);
    Actions.AIEquipRate(4, 1, 300);
    Actions.AIEquipRate(6, 0, 300);
    Actions.AIEquipRate(6, 1, 300);
    Actions.AIEquipRate(7, 0, 300);
    Actions.AIEquipRate(7, 1, 300);
    Actions.AIRecruitDelay(2, 12000);
    if States.PlayerEnabled(0) then
    begin
      Actions.GiveWares(0, 7, 5);
      Actions.GiveWares(0, 9, 10);
      Actions.GiveWares(0, 27, 15);
      G2 := Actions.GiveGroup(0, 22, 112, 107, 1, 9, 3);
      Actions.GroupOrderWalk(G2, 86, 67, 1);
      Actions.GiveUnit(0, 0, 134, 129, 4);
      Actions.GiveUnit(0, 0, 137, 129, 4);
      Actions.GiveUnit(0, 9, 136, 130, 4);
    end;
    if States.PlayerEnabled(1) then
    begin
      Actions.GiveWares(1, 7, 5);
      Actions.GiveWares(1, 9, 10);
      Actions.GiveWares(1, 27, 15);
      G2 := Actions.GiveGroup(1, 20, 35, 106, 0, 9, 3);
      Actions.GroupOrderWalk(G2, 55, 92, 7);
      Actions.GiveUnit(1, 0, 22, 132, 4);
      Actions.GiveUnit(1, 0, 24, 132, 4);
      Actions.GiveUnit(1, 9, 23, 133, 4);
    end;
  end;

  if States.MissionDifficulty = mdNormal then
  begin
    Actions.AIEquipRate(5, 0, 90);
    Actions.AIEquipRate(5, 1, 90);
    Actions.AIEquipRate(3, 0, 200);
    Actions.AIEquipRate(3, 1, 200);
    Actions.AIEquipRate(4, 0, 200);
    Actions.AIEquipRate(4, 1, 200);
    Actions.AIEquipRate(6, 0, 200);
    Actions.AIEquipRate(6, 1, 200);
    Actions.AIEquipRate(7, 0, 200);
    Actions.AIEquipRate(7, 1, 200);
    Actions.AIRecruitDelay(2, 18000);
    Actions.GiveGroup(8, 22, 6, 24, 3, 10, 5);
  end;

  for I := 3 to 7 do
    if I <> 5 then
      Actions.AIRecruitDelay(I, Utils.MaxI(FirstAttackTimer(I) - SoldiersToEquip(I) * States.AIEquipRate(I, 1), 0));

end;


procedure ChangeArmyType;
var
  I, K: Integer;
begin
  ChangesCount := ChangesCount + States.KaMRandomI(4);
  for I := 3 to 8 do
    for K := 15 to 22 do
    begin
      if ChangesCount mod 2 <> 0 then
        Actions.UnitBlock(I, K, K mod 2 = 0);
      if ChangesCount mod 2 = 0 then
        Actions.UnitBlock(I, K, K mod 2 <> 0);
    end;
end;


procedure AutoFeed(P: Integer);
var
  K: Integer;
  UnitsToFeed: array of Integer;
begin
  UnitsToFeed := States.PlayerGetAllUnits(P);
  if Length(UnitsToFeed) <= 0 then
    Exit;
  for K := Low(UnitsToFeed) to High(UnitsToFeed) do
    Actions.UnitHungerSet(UnitsToFeed[K], States.UnitMaxHunger);
end;


procedure CheckFences(AI: Integer);
var
  G: array of Integer;
  K, H, U, X, Y, X1, Y1: Integer;
begin
  G := States.PlayerGetAllGroups(AI);
  if Length(G) > 0 then
    for K := 0 to Length(G) - 1 do
      if G[K] > 0 then
      begin
        U := States.GroupMember(G[K], States.KaMRandomI(States.GroupMemberCount(G[K])));
        X := States.UnitPositionX(U);
        Y := States.UnitPositionY(U);
        for X1 := X - RADIUS to X + RADIUS do
        for Y1 := Y - RADIUS to Y + RADIUS do
          if (Utils.InRangeI(X1, 1, 159))
          and (Utils.InRangeI(Y1, 1, 159)) then
            H := States.HouseAt(X1, Y1);
        if H > 0 then
          if (not States.HouseIsComplete(H))
          and (Utils.InRangeI(States.HouseOwner(H), 0, 1)) then
            Actions.GroupOrderAttackHouse(G[K], H);
      end;
end;


procedure OnTick;
var
  I, K: Integer;
begin
  for I := 2 to 8 do
    if States.GameTime mod AUTOFEED_TIME = 5 * I then
      AutoFeed(I);

  if States.GameTime mod FENCE_TIME = 0 then
    for I := 3 to 8 do
      CheckFences(I);

  if States.GameTime mod ARMY_TYPE_TIME = 0 then
    ChangeArmyType;

  if States.GameTime = 30 then
    Actions.ShowMsg(-1, '<$0>');

  if (States.GroupDead(AIGroup))
  and (not Msg) then
  begin
    Actions.ShowMsg(-1, '<$1>');
    Msg := True;
  end;

  if (States.GameTime = 39200)
  and (States.MissionDifficulty = mdHard1) then
  begin
    Actions.GiveGroup(8, 22, 7, 21, 2, 27, 9);
    Actions.GiveGroup(8, 22, 25, 10, 4, 24, 8);
    Actions.GiveGroup(8, 22, 94, 24, 4, 25, 5);
    Actions.GiveGroup(8, 22, 65, 20, 2, 15, 5);
  end;

  if States.GameTime mod DEPOSITS_TIME = 0 then
    UpdateDeposits;

  if States.GameTime = 108000 then
    for I := 3 to 8 do
      Actions.AIDefendAllies(I, True);

  for K := 0 to 1 do
    if SoundAllowed[K] then
    begin
      if (States.KaMRandom > 0.5)
      and (States.GameTime mod AMBIENT_TIME = 0) then
      begin
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 21, 79);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 4, 156);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 64, 115);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 131, 92);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 135, 55);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 90, 37);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 31, 2);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 100, 143);
        Actions.PlayOGGAtLocation(K, 'Quack' + IntToStr(1 + States.KaMRandomI(3)), 0.75, 32, 150, 16);
      end;

      if (States.KaMRandom < 0.4)
      and (States.GameTime mod AMBIENT_TIME = 33) then
        if Length(Wolves) > 0 then
          for I := Low(Wolves) to High(Wolves) do
            if not States.UnitDead(Wolves[I]) then
              if States.KaMRandom < 0.25 then
                 Actions.PlayOGGAtLocation(K, 'Wolf' + IntToStr(1 + States.KaMRandomI(3)), Utils.MinS(States.KaMRandom, 0.35), 32, States.UnitPositionX(Wolves[I]), States.UnitPositionY(Wolves[I]));

    end;

end;


procedure OnWarriorEquipped(U, G: Integer);
begin
  if States.UnitOwner(U) = 5 then
    Actions.HouseBarracksGiveRecruit(Barracks);
end;